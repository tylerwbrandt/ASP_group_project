points(hits$dist..ft.*cos((90-hits$spray_angle)*pi/180), hits$dist..ft.*sin((90-hits$spray_angle)*pi/180))
colnames(oakland_fsu)
colnames(oakland_fsu)["dist..ft."]
colnames(oakland_fsu)[12] <- "dist"
View(oakland_fsu)
plot (-200:200, 0:400, type="n", bg="white", axes = FALSE)
lines(c(0,90/sqrt(2),0,-90/sqrt(2),0),c(0,90/sqrt(2),180/sqrt(2),90/sqrt(2),0), col=c("black"))
lines(c(0,300/sqrt(2)), c(0,300/sqrt(2)), col = c("black"))
lines(c(0,-300/sqrt(2)), c(0,300/sqrt(2)), col = c("black"))
points(hits$dist..ft.*cos((90-hits$spray_angle)*pi/180), hits$dist..ft.*sin((90-hits$spray_angle)*pi/180))
plot (-200:200, 0:600, type="n", bg="white", axes = FALSE)
lines(c(0,90/sqrt(2),0,-90/sqrt(2),0),c(0,90/sqrt(2),180/sqrt(2),90/sqrt(2),0), col=c("black"))
lines(c(0,300/sqrt(2)), c(0,300/sqrt(2)), col = c("black"))
plot (-200:200, 0:600, type="n", bg="white", axes = FALSE)
value <- 200 + 150/sqrt(2) - 450*sqrt(2)/(4*sqrt(2) - 3)
lines(lowess(-300/sqrt(2):300/sqrt(2), sqrt(400-value-x^2) + value))
lines(lowess(-300/sqrt(2):300/sqrt(2), sqrt(400-value-(-300/sqrt(2):300/sqrt(2))^2) + value))
sqrt(400-value-(-300/sqrt(2):300/sqrt(2))^2)
sqrt(400-value)
400-value
-300/sqrt(2)
(-300/sqrt(2))^2
lines(lowess(-300/sqrt(2):300/sqrt(2), sqrt((400-value)^2-(-300/sqrt(2):300/sqrt(2))^2) + value))
plot (-250:250, 0:500, type="n", bg="white", axes = FALSE)
lines(c(0,90/sqrt(2),0,-90/sqrt(2),0),c(0,90/sqrt(2),180/sqrt(2),90/sqrt(2),0), col=c("black"))
lines(c(0,300/sqrt(2)), c(0,300/sqrt(2)), col = c("black"))
lines(c(0,-300/sqrt(2)), c(0,300/sqrt(2)), col = c("black"))
points(hits$dist..ft.*cos((90-hits$spray_angle)*pi/180), hits$dist..ft.*sin((90-hits$spray_angle)*pi/180))
lines(lowess(-300/sqrt(2):300/sqrt(2), sqrt((400-value)^2-(-300/sqrt(2):300/sqrt(2))^2) + value))
sqrt((400-value)^2-(-300/sqrt(2):300/sqrt(2))^2)
plot (-250:250, 0:500, type="n", bg="white", axes = FALSE)
lines(c(0,90/sqrt(2),0,-90/sqrt(2),0),c(0,90/sqrt(2),180/sqrt(2),90/sqrt(2),0), col=c("black"))
lines(c(0,300/sqrt(2)), c(0,300/sqrt(2)), col = c("black"))
lines(c(0,-300/sqrt(2)), c(0,300/sqrt(2)), col = c("black"))
points(hits$dist..ft.*cos((90-hits$spray_angle)*pi/180), hits$dist..ft.*sin((90-hits$spray_angle)*pi/180))
value <- 200 + 150/sqrt(2) - (450/sqrt(2))/(4*sqrt(2) - 3)
lines(lowess(-300/sqrt(2):300/sqrt(2), sqrt((400-value)^2-(-300/sqrt(2):300/sqrt(2))^2) + value))
sqrt((400-value)^2-(-300/sqrt(2):300/sqrt(2))^2)
sqrt((400-value)^2-(-300/sqrt(2):300/sqrt(2))^2) + value
-300/sqrt(2):300/sqrt(2)
(-300/sqrt(2)):(300/sqrt(2))
lines(lowess((-300/sqrt(2)):(300/sqrt(2)), sqrt((400-value)^2-((-300/sqrt(2)):(300/sqrt(2)))^2) + value))
lines(lowess((-300/sqrt(2)):(300/sqrt(2)), sqrt((400-value)^2-((-300/sqrt(2)):(300/sqrt(2)))^2)))
sqrt((400-value)^2-(-300/sqrt(2):300/sqrt(2))^2)
sqrt((400-value)^2-((-300/sqrt(2)):(300/sqrt(2)))^2)
sqrt((400-value)^2-((-300/sqrt(2)):(300/sqrt(2)))^2) + value
lines((-300/sqrt(2)):(300/sqrt(2)), sqrt((400-value)^2-((-300/sqrt(2)):(300/sqrt(2)))^2) + value)
plot (-250:250, 0:500, type="n", bg="white", axes = FALSE)
lines(c(0,90/sqrt(2),0,-90/sqrt(2),0),c(0,90/sqrt(2),180/sqrt(2),90/sqrt(2),0), col=c("black"))
lines(c(0,300/sqrt(2)), c(0,300/sqrt(2)), col = c("black"))
lines(c(0,-300/sqrt(2)), c(0,300/sqrt(2)), col = c("black"))
points(hits$dist..ft.*cos((90-hits$spray_angle)*pi/180), hits$dist..ft.*sin((90-hits$spray_angle)*pi/180))
lines((-300/sqrt(2)):(300/sqrt(2)), sqrt((400-value)^2-((-300/sqrt(2)):(300/sqrt(2)))^2) + value)
spray_chart_hitter <- function(hitter, data, left = 300, center = 400, right = 300){
spray_subset <- subset(data, hitter_id == hitter, !is.na(spray_angle))
plot(-300:300, 0:600, type = "n", bg = "white")
# Create field outline
lines(c(0,90/sqrt(2),0,-90/sqrt(2),0),c(0,90/sqrt(2),180/sqrt(2),90/sqrt(2),0), col=c("black"))
lines(c(0,right/sqrt(2)), c(0,right/sqrt(2)), col = c("black"))
lines(c(0,-left/sqrt(2)), c(0,left/sqrt(2)), col = c("black"))
# Create fence based on left,center,right dimensions
y_mean <- c((left/sqrt(2) + center)/2, (right/sqrt(2) + center))
x_mean <- c((left/sqrt(2))/2, (right/sqrt(2))/2)
m <- c((center-left/sqrt(2))/(left/sqrt(2)), (center-right/sqrt(2))/(right/sqrt(2)))
new_m < c(-1/m[1], 1/m[2])
horiz <- (y_mean[2] - y_mean[1] + m[1]*x_mean[1] - m[2]*x_mean[2])/(m[1] = m[2])
vert <- m[1]*(horiz-x_mean[1]) + y_mean[1]
r_sq <- (horiz^2 + (center-vert)^2)
lines((-left/sqrt(2)):(right/sqrt(2)), sqrt(r_sq - ((-left/sqrt(2)):(right/sqrt(2)) - horiz)^2) + vert)
points(spray_subset$dist*cos((90-spray_subset$spray_angle)*pi/180), spray_subset$dist*sin((90-spray_subset$spray_angle)*pi/180))
}
View(oakland_fsu)
spray_chart_hitter(tjoakld42, oakland_fsu)
spray_chart_hitter("tjoakld42", oakland_fsu)
spray_chart_hitter <- function(hitter, data, left = 300, center = 400, right = 300){
spray_subset <- subset(data, hitter_id == hitter, !is.na(spray_angle))
plot(-300:300, 0:600, type = "n", bg = "white")
# Create field outline
lines(c(0,90/sqrt(2),0,-90/sqrt(2),0),c(0,90/sqrt(2),180/sqrt(2),90/sqrt(2),0), col=c("black"))
lines(c(0,right/sqrt(2)), c(0,right/sqrt(2)), col = c("black"))
lines(c(0,-left/sqrt(2)), c(0,left/sqrt(2)), col = c("black"))
# Create fence based on left,center,right dimensions
y_mean <- c((left/sqrt(2) + center)/2, (right/sqrt(2) + center))
x_mean <- c((left/sqrt(2))/2, (right/sqrt(2))/2)
m <- c((center-left/sqrt(2))/(left/sqrt(2)), (center-right/sqrt(2))/(right/sqrt(2)))
new_m <- c(-1/m[1], 1/m[2])
horiz <- (y_mean[2] - y_mean[1] + new_m[1]*x_mean[1] - new_m[2]*x_mean[2])/(new_m[1] = new_m[2])
vert <- new_m[1]*(horiz-x_mean[1]) + y_mean[1]
r_sq <- (horiz^2 + (center-vert)^2)
lines((-left/sqrt(2)):(right/sqrt(2)), sqrt(r_sq - ((-left/sqrt(2)):(right/sqrt(2)) - horiz)^2) + vert)
points(spray_subset$dist*cos((90-spray_subset$spray_angle)*pi/180), spray_subset$dist*sin((90-spray_subset$spray_angle)*pi/180))
}
spray_chart_hitter("tjoakld42", oakland_fsu)
spray_chart_hitter <- function(hitter, data, left = 300, center = 400, right = 300){
spray_subset <- subset(data, hitter_id == hitter, !is.na(spray_angle))
plot(-300:300, 0:600, type = "n", bg = "white")
# Create field outline
lines(c(0,90/sqrt(2),0,-90/sqrt(2),0),c(0,90/sqrt(2),180/sqrt(2),90/sqrt(2),0), col=c("black"))
lines(c(0,right/sqrt(2)), c(0,right/sqrt(2)), col = c("black"))
lines(c(0,-left/sqrt(2)), c(0,left/sqrt(2)), col = c("black"))
# Create fence based on left,center,right dimensions
y_mean <- c((left/sqrt(2) + center)/2, (right/sqrt(2) + center))
x_mean <- c((left/sqrt(2))/2, (right/sqrt(2))/2)
m <- c((center-left/sqrt(2))/(left/sqrt(2)), (center-right/sqrt(2))/(right/sqrt(2)))
new_m <- c(-1/m[1], 1/m[2])
horiz <- (y_mean[2] - y_mean[1] + new_m[1]*x_mean[1] - new_m[2]*x_mean[2])/(new_m[1] = new_m[2])
vert <- new_m[1]*(horiz-x_mean[1]) + y_mean[1]
r_sq <- (horiz^2 + (center-vert)^2)
lines((-300/sqrt(2)):(right/sqrt(2)), sqrt(r_sq - ((-300/sqrt(2)):(right/sqrt(2)) - horiz)^2) + vert)
points(spray_subset$dist*cos((90-spray_subset$spray_angle)*pi/180), spray_subset$dist*sin((90-spray_subset$spray_angle)*pi/180))
}
spray_chart_hitter("tjoakld42", oakland_fsu)
spray_chart_hitter("tjoakld42", oakland_fsu, 500, 400, 300)
spray_chart_hitter("tjoakld42", oakland_fsu, 300, 400, 500)
spray_chart_hitter("tjoakld42", oakland_fsu, 300, 400, 300)
spray_chart_hitter("tjoakld42", oakland_fsu, 300, 400, 500)
spray_chart_hitter("tjoakld42", oakland_fsu, 300, 400, 400)
spray_chart_hitter("tjoakld42", oakland_fsu, 300, 400, 200)
spray_chart_hitter("tjoakld42", oakland_fsu, 300, 400, 100)
spray_chart_hitter("tjoakld42", oakland_fsu, 300, 400, 301)
spray_chart_hitter("tjoakld42", oakland_fsu, 300, 400, 350)
spray_chart_hitter("tjoakld42", oakland_fsu, 300, 400, 300)
spray_chart_hitter("tjoakld42", oakland_fsu, 300, 400, 325)
spray_chart_hitter("tjoakld42", oakland_fsu, 350, 400, 300)
spray_chart_hitter("tjoakld42", oakland_fsu, 300, 400, 300)
left <- 300
center <- 400
right <- 300
plot(-300:300, 0:600, type = "n", bg = "white")
lines(c(0,90/sqrt(2),0,-90/sqrt(2),0),c(0,90/sqrt(2),180/sqrt(2),90/sqrt(2),0), col=c("black"))
lines(c(0,right/sqrt(2)), c(0,right/sqrt(2)), col = c("black"))
lines(c(0,-left/sqrt(2)), c(0,left/sqrt(2)), col = c("black"))
spray_chart_hitter <- function(hitter, data, left = 300, center = 400, right = 300){
spray_subset <- subset(data, hitter_id == hitter, !is.na(spray_angle))
plot(-300:300, 0:600, type = "n", bg = "white", axes = FALSE)
# Create field outline
lines(c(0,90/sqrt(2),0,-90/sqrt(2),0),c(0,90/sqrt(2),180/sqrt(2),90/sqrt(2),0), col=c("black"))
lines(c(0,right/sqrt(2)), c(0,right/sqrt(2)), col = c("black"))
lines(c(0,-left/sqrt(2)), c(0,left/sqrt(2)), col = c("black"))
# Create fence based on left,center,right dimensions
y_mean <- c((left/sqrt(2) + center)/2, (right/sqrt(2) + center))
x_mean <- c((left/sqrt(2))/2, (right/sqrt(2))/2)
m <- c((center-left/sqrt(2))/(left/sqrt(2)), (center-right/sqrt(2))/(right/sqrt(2)))
new_m <- c(-1/m[1], 1/m[2])
horiz <- (y_mean[2] - y_mean[1] + new_m[1]*x_mean[1] - new_m[2]*x_mean[2])/(new_m[1] = new_m[2])
vert <- new_m[1]*(horiz-x_mean[1]) + y_mean[1]
r_sq <- (horiz^2 + (center-vert)^2)
lines((-left/sqrt(2)):(right/sqrt(2)), sqrt(r_sq - ((-left/sqrt(2)):(right/sqrt(2)) - horiz)^2) + vert)
points(spray_subset$dist*cos((90-spray_subset$spray_angle)*pi/180), spray_subset$dist*sin((90-spray_subset$spray_angle)*pi/180))
}
spray_chart_hitter("tjoakld42", oakland_fsu, 300, 400, 300)
y_mean <- c((left/sqrt(2) + center)/2, (right/sqrt(2) + center))
x_mean <- c((left/sqrt(2))/2, (right/sqrt(2))/2)
y_mean <- c((left/sqrt(2) + center)/2, (right/sqrt(2) + center)/2)
spray_chart_hitter <- function(hitter, data, left = 300, center = 400, right = 300){
spray_subset <- subset(data, hitter_id == hitter, !is.na(spray_angle))
plot(-300:300, 0:600, type = "n", bg = "white", axes = FALSE)
# Create field outline
lines(c(0,90/sqrt(2),0,-90/sqrt(2),0),c(0,90/sqrt(2),180/sqrt(2),90/sqrt(2),0), col=c("black"))
lines(c(0,right/sqrt(2)), c(0,right/sqrt(2)), col = c("black"))
lines(c(0,-left/sqrt(2)), c(0,left/sqrt(2)), col = c("black"))
# Create fence based on left,center,right dimensions
y_mean <- c((left/sqrt(2) + center)/2, (right/sqrt(2) + center)/2)
x_mean <- c((left/sqrt(2))/2, (right/sqrt(2))/2)
m <- c((center-left/sqrt(2))/(left/sqrt(2)), (center-right/sqrt(2))/(right/sqrt(2)))
new_m <- c(-1/m[1], 1/m[2])
horiz <- (y_mean[2] - y_mean[1] + new_m[1]*x_mean[1] - new_m[2]*x_mean[2])/(new_m[1] = new_m[2])
vert <- new_m[1]*(horiz-x_mean[1]) + y_mean[1]
r_sq <- (horiz^2 + (center-vert)^2)
lines((-left/sqrt(2)):(right/sqrt(2)), sqrt(r_sq - ((-left/sqrt(2)):(right/sqrt(2)) - horiz)^2) + vert)
points(spray_subset$dist*cos((90-spray_subset$spray_angle)*pi/180), spray_subset$dist*sin((90-spray_subset$spray_angle)*pi/180))
}
spray_chart_hitter("tjoakld42", oakland_fsu, 300, 400, 300)
spray_chart_hitter("tjoakld42", oakland_fsu)
m <- c((center-left/sqrt(2))/(left/sqrt(2)), (center-right/sqrt(2))/(right/sqrt(2)))
new_m <- c(-1/m[1], 1/m[2])
horiz <- (y_mean[2] - y_mean[1] + new_m[1]*x_mean[1] - new_m[2]*x_mean[2])/(new_m[1] = new_m[2])
vert <- new_m[1]*(horiz-x_mean[1]) + y_mean[1]
spray_chart_hitter <- function(hitter, data, left = 300, center = 400, right = 300){
spray_subset <- subset(data, hitter_id == hitter, !is.na(spray_angle))
plot(-300:300, 0:600, type = "n", bg = "white", axes = FALSE)
# Create field outline
lines(c(0,90/sqrt(2),0,-90/sqrt(2),0),c(0,90/sqrt(2),180/sqrt(2),90/sqrt(2),0), col=c("black"))
lines(c(0,right/sqrt(2)), c(0,right/sqrt(2)), col = c("black"))
lines(c(0,-left/sqrt(2)), c(0,left/sqrt(2)), col = c("black"))
# Create fence based on left,center,right dimensions
y_mean <- c((left/sqrt(2) + center)/2, (right/sqrt(2) + center)/2)
x_mean <- c((left/sqrt(2))/2, (right/sqrt(2))/2)
m <- c((center-left/sqrt(2))/(left/sqrt(2)), (center-right/sqrt(2))/(right/sqrt(2)))
new_m <- c(-1/m[1], 1/m[2])
horiz <- (y_mean[2] - y_mean[1] + new_m[1]*x_mean[1] - new_m[2]*x_mean[2])/(new_m[1] - new_m[2])
vert <- new_m[1]*(horiz-x_mean[1]) + y_mean[1]
r_sq <- (horiz^2 + (center-vert)^2)
lines((-left/sqrt(2)):(right/sqrt(2)), sqrt(r_sq - ((-left/sqrt(2)):(right/sqrt(2)) - horiz)^2) + vert)
points(spray_subset$dist*cos((90-spray_subset$spray_angle)*pi/180), spray_subset$dist*sin((90-spray_subset$spray_angle)*pi/180))
}
spray_chart_hitter("tjoakld42", oakland_fsu)
horiz <- (y_mean[2] - y_mean[1] + new_m[1]*x_mean[1] - new_m[2]*x_mean[2])/(new_m[1] - new_m[2])
new_m <- c(1/m[1], 1/m[2])
new_m <- c(-1/m[1], 1/m[2])
new_m <- c(-1/m[1], 1/m[2])
horiz <- (y_mean[2] - y_mean[1] + new_m[1]*x_mean[1] - new_m[2]*x_mean[2])/(new_m[1] - new_m[2])
horiz <- (y_mean[2] - y_mean[1] + new_m[1]*x_mean[1] - new_m[2]*x_mean[2])/(new_m[1] - new_m[2])
spray_chart_hitter <- function(hitter, data, left = 300, center = 400, right = 300){
spray_subset <- subset(data, hitter_id == hitter, !is.na(spray_angle))
plot(-300:300, 0:600, type = "n", bg = "white", axes = FALSE)
# Create field outline
lines(c(0,90/sqrt(2),0,-90/sqrt(2),0),c(0,90/sqrt(2),180/sqrt(2),90/sqrt(2),0), col=c("black"))
lines(c(0,right/sqrt(2)), c(0,right/sqrt(2)), col = c("black"))
lines(c(0,-left/sqrt(2)), c(0,left/sqrt(2)), col = c("black"))
# Create fence based on left,center,right dimensions
y_mean <- c((left/sqrt(2) + center)/2, (right/sqrt(2) + center)/2)
x_mean <- c(-(left/sqrt(2))/2, (right/sqrt(2))/2)
m <- c((center-left/sqrt(2))/(left/sqrt(2)), (center-right/sqrt(2))/(right/sqrt(2)))
new_m <- c(-1/m[1], 1/m[2])
horiz <- (y_mean[2] - y_mean[1] + new_m[1]*x_mean[1] - new_m[2]*x_mean[2])/(new_m[1] - new_m[2])
vert <- new_m[1]*(horiz-x_mean[1]) + y_mean[1]
r_sq <- (horiz^2 + (center-vert)^2)
lines((-left/sqrt(2)):(right/sqrt(2)), sqrt(r_sq - ((-left/sqrt(2)):(right/sqrt(2)) - horiz)^2) + vert)
points(spray_subset$dist*cos((90-spray_subset$spray_angle)*pi/180), spray_subset$dist*sin((90-spray_subset$spray_angle)*pi/180))
}
spray_chart_hitter("tjoakld42", oakland_fsu)
debug(by.var.lm)
by.var.lm(chalquality, voteshare ~ year, OOS, 2)
undebug(by.var.lm)
debug(spray_chart_hitter)
spray_chart_hitter("tjoakld42", oakland_fsu)
function(hitter, data, left = 300, center = 400, right = 300){
spray_subset <- subset(data, hitter_id == hitter, !is.na(spray_angle))
plot(-300:300, 0:600, type = "n", bg = "white", axes = FALSE)
# Create field outline
lines(c(0,90/sqrt(2),0,-90/sqrt(2),0),c(0,90/sqrt(2),180/sqrt(2),90/sqrt(2),0), col=c("black"))
lines(c(0,right/sqrt(2)), c(0,right/sqrt(2)), col = c("black"))
lines(c(0,-left/sqrt(2)), c(0,left/sqrt(2)), col = c("black"))
# Create fence based on left,center,right dimensions
y_mean <- c((left/sqrt(2) + center)/2, (right/sqrt(2) + center)/2)
x_mean <- c(-(left/sqrt(2))/2, (right/sqrt(2))/2)
m <- c((center-left/sqrt(2))/(left/sqrt(2)), (center-right/sqrt(2))/(right/sqrt(2)))
new_m <- c(-1/m[1], 1/m[2])
horiz <- (y_mean[2] - y_mean[1] + new_m[1]*x_mean[1] - new_m[2]*x_mean[2])/(new_m[1] - new_m[2])
vert <- new_m[1]*(horiz-x_mean[1]) + y_mean[1]
r_sq <- (horiz^2 + (center-vert)^2)
lines((-left/sqrt(2)):(right/sqrt(2)), sqrt(r_sq - ((-left/sqrt(2)):(right/sqrt(2)) - horiz)^2) + vert)
points(spray_subset$dist*cos((90-spray_subset$spray_angle)*pi/180), spray_subset$dist*sin((90-spray_subset$spray_angle)*pi/180))
}
spray_subset <- subset(data, hitter_id == hitter, !is.na(spray_angle))
plot(-300:300, 0:600, type = "n", bg = "white", axes = FALSE)
undebug(spray_chart_hitter)
spray_chart_hitter("tj42oakld", oakland_fsu)
x = <- (121 +- sqrt(121^2 - 4 * 2 * (-4439.75))/4
x <- (121 +- sqrt(121^2 - 4 * 2 * (-4439.75))/4
)
x <- (121 + sqrt(121^2 - 4 * 2 * (-4439.75)))/4
x <- (121 - sqrt(121^2 - 4 * 2 * (-4439.75)))/4
x <- (121 + sqrt(121^2 - 4 * 2 * (-4439.75)))/4
x*sqrt(2)
spray_chart_hitter <- function(hitter, data, left = 300, center = 400, right = 300){
spray_subset <- subset(data, hitter_id == hitter, !is.na(spray_angle))
plot(-300:300, 0:600, type = "n", bg = "white", axes = FALSE)
# Create field outline
lines(c(0,90/sqrt(2),0,-90/sqrt(2),0),c(0,90/sqrt(2),180/sqrt(2),90/sqrt(2),0), col=c("black"))
lines(c(0,right/sqrt(2)), c(0,right/sqrt(2)), col = c("black"))
lines(c(0,-left/sqrt(2)), c(0,left/sqrt(2)), col = c("black"))
# Create fence based on left,center,right dimensions
y_mean <- c((left/sqrt(2) + center)/2, (right/sqrt(2) + center)/2)
x_mean <- c(-(left/sqrt(2))/2, (right/sqrt(2))/2)
m <- c((center-left/sqrt(2))/(left/sqrt(2)), (center-right/sqrt(2))/(right/sqrt(2)))
new_m <- c(-1/m[1], 1/m[2])
horiz <- (y_mean[2] - y_mean[1] + new_m[1]*x_mean[1] - new_m[2]*x_mean[2])/(new_m[1] - new_m[2])
vert <- new_m[1]*(horiz-x_mean[1]) + y_mean[1]
r_sq <- (horiz^2 + (center-vert)^2)
lines((-left/sqrt(2)):(right/sqrt(2)), sqrt(r_sq - ((-left/sqrt(2)):(right/sqrt(2)) - horiz)^2) + vert)
points(spray_subset$dist*cos((90-spray_subset$spray_angle)*pi/180), spray_subset$dist*sin((90-spray_subset$spray_angle)*pi/180))
points((-(121 + sqrt(121^2 - 4 * 2 * (-4439.75)))/4):((121 + sqrt(121^2 - 4 * 2 * (-4439.75)))/4),
sqrt(95^2 - ((-(121 + sqrt(121^2 - 4 * 2 * (-4439.75)))/4):((121 + sqrt(121^2 - 4 * 2 * (-4439.75)))/4))^2) + 60.5)
}
spray_chart_hitter("tj42oakld", oakland_fsu)
spray_chart_hitter <- function(hitter, data, left = 300, center = 400, right = 300){
spray_subset <- subset(data, hitter_id == hitter, !is.na(spray_angle))
plot(-300:300, 0:600, type = "n", bg = "white", axes = FALSE)
# Create field outline
lines(c(0,90/sqrt(2),0,-90/sqrt(2),0),c(0,90/sqrt(2),180/sqrt(2),90/sqrt(2),0), col=c("black"))
lines(c(0,right/sqrt(2)), c(0,right/sqrt(2)), col = c("black"))
lines(c(0,-left/sqrt(2)), c(0,left/sqrt(2)), col = c("black"))
# Create fence based on left,center,right dimensions
y_mean <- c((left/sqrt(2) + center)/2, (right/sqrt(2) + center)/2)
x_mean <- c(-(left/sqrt(2))/2, (right/sqrt(2))/2)
m <- c((center-left/sqrt(2))/(left/sqrt(2)), (center-right/sqrt(2))/(right/sqrt(2)))
new_m <- c(-1/m[1], 1/m[2])
horiz <- (y_mean[2] - y_mean[1] + new_m[1]*x_mean[1] - new_m[2]*x_mean[2])/(new_m[1] - new_m[2])
vert <- new_m[1]*(horiz-x_mean[1]) + y_mean[1]
r_sq <- (horiz^2 + (center-vert)^2)
lines((-left/sqrt(2)):(right/sqrt(2)), sqrt(r_sq - ((-left/sqrt(2)):(right/sqrt(2)) - horiz)^2) + vert)
points(spray_subset$dist*cos((90-spray_subset$spray_angle)*pi/180), spray_subset$dist*sin((90-spray_subset$spray_angle)*pi/180))
lines((-(121 + sqrt(121^2 - 4 * 2 * (-4439.75)))/4):((121 + sqrt(121^2 - 4 * 2 * (-4439.75)))/4),
sqrt(95^2 - ((-(121 + sqrt(121^2 - 4 * 2 * (-4439.75)))/4):((121 + sqrt(121^2 - 4 * 2 * (-4439.75)))/4))^2) + 60.5)
}
spray_chart_hitter("tj42oakld", oakland_fsu)
x <- (121 + sqrt(121^2 - 4 * 2 * (60.5^2-90^2)))/4
x <- (121 + sqrt(121^2 - 4 * 2 * (60.5^2-90^2)))/4
x <- (121 + sqrt(121^2 - 4 * 2 * (60.5^2-95^2)))/4
spray_chart_hitter <- function(hitter, data, left = 300, center = 400, right = 300){
spray_subset <- subset(data, hitter_id == hitter, !is.na(spray_angle))
plot(-300:300, 0:600, type = "n", bg = "white", axes = FALSE)
# Create field outline
lines(c(0,90/sqrt(2),0,-90/sqrt(2),0),c(0,90/sqrt(2),180/sqrt(2),90/sqrt(2),0), col=c("black"))
lines(c(0,right/sqrt(2)), c(0,right/sqrt(2)), col = c("black"))
lines(c(0,-left/sqrt(2)), c(0,left/sqrt(2)), col = c("black"))
# Create fence based on left,center,right dimensions
y_mean <- c((left/sqrt(2) + center)/2, (right/sqrt(2) + center)/2)
x_mean <- c(-(left/sqrt(2))/2, (right/sqrt(2))/2)
m <- c((center-left/sqrt(2))/(left/sqrt(2)), (center-right/sqrt(2))/(right/sqrt(2)))
new_m <- c(-1/m[1], 1/m[2])
horiz <- (y_mean[2] - y_mean[1] + new_m[1]*x_mean[1] - new_m[2]*x_mean[2])/(new_m[1] - new_m[2])
vert <- new_m[1]*(horiz-x_mean[1]) + y_mean[1]
r_sq <- (horiz^2 + (center-vert)^2)
lines((-left/sqrt(2)):(right/sqrt(2)), sqrt(r_sq - ((-left/sqrt(2)):(right/sqrt(2)) - horiz)^2) + vert)
points(spray_subset$dist*cos((90-spray_subset$spray_angle)*pi/180), spray_subset$dist*sin((90-spray_subset$spray_angle)*pi/180))
lines((-(121 + sqrt(121^2 - 4 * 2 * (-4439.75)))/4):((121 + sqrt(121^2 - 4 * 2 * (-4439.75)))/4),
sqrt(95^2 - ((-(121 + sqrt(121^2 - 4 * 2 * (60.5^2 - 95^2)))/4):((121 + sqrt(121^2 - 4 * 2 * (60.5^2-95^2)))/4))^2) + 60.5)
}
spray_chart_hitter("tj42oakld", oakland_fsu)
spray_chart_hitter <- function(hitter, data, left = 300, center = 400, right = 300){
spray_subset <- subset(data, hitter_id == hitter, !is.na(spray_angle))
plot(-300:300, 0:600, type = "n", bg = "white", axes = FALSE)
# Create field outline
lines(c(0,90/sqrt(2),0,-90/sqrt(2),0),c(0,90/sqrt(2),180/sqrt(2),90/sqrt(2),0), col=c("black"))
lines(c(0,right/sqrt(2)), c(0,right/sqrt(2)), col = c("black"))
lines(c(0,-left/sqrt(2)), c(0,left/sqrt(2)), col = c("black"))
# Create fence based on left,center,right dimensions
y_mean <- c((left/sqrt(2) + center)/2, (right/sqrt(2) + center)/2)
x_mean <- c(-(left/sqrt(2))/2, (right/sqrt(2))/2)
m <- c((center-left/sqrt(2))/(left/sqrt(2)), (center-right/sqrt(2))/(right/sqrt(2)))
new_m <- c(-1/m[1], 1/m[2])
horiz <- (y_mean[2] - y_mean[1] + new_m[1]*x_mean[1] - new_m[2]*x_mean[2])/(new_m[1] - new_m[2])
vert <- new_m[1]*(horiz-x_mean[1]) + y_mean[1]
r_sq <- (horiz^2 + (center-vert)^2)
lines((-left/sqrt(2)):(right/sqrt(2)), sqrt(r_sq - ((-left/sqrt(2)):(right/sqrt(2)) - horiz)^2) + vert)
points(spray_subset$dist*cos((90-spray_subset$spray_angle)*pi/180), spray_subset$dist*sin((90-spray_subset$spray_angle)*pi/180))
lines((-(121 + sqrt(121^2 - 4 * 2 * (60.5^2-95^2)))/4):((121 + sqrt(121^2 - 4 * 2 * (60.5^2-95^2)))/4),
sqrt(95^2 - ((-(121 + sqrt(121^2 - 4 * 2 * (60.5^2 - 95^2)))/4):((121 + sqrt(121^2 - 4 * 2 * (60.5^2-95^2)))/4))^2) + 60.5)
}
spray_chart_hitter("tj42oakld", oakland_fsu)
plot (-250:250, 0:500, type="n", bg="white", axes = FALSE)
lines(c(0,90/sqrt(2),0,-90/sqrt(2),0),c(0,90/sqrt(2),180/sqrt(2),90/sqrt(2),0), col=c("black"))
lines(c(0,300/sqrt(2)), c(0,300/sqrt(2)), col = c("black"))
lines(c(0,-300/sqrt(2)), c(0,300/sqrt(2)), col = c("black"))
hits <- subset(oakland_fsu, !is.na(spray_angle))
points(hits$dist..ft.*cos((90-hits$spray_angle)*pi/180), hits$dist..ft.*sin((90-hits$spray_angle)*pi/180))
lines((-300/sqrt(2)):(300/sqrt(2)), sqrt((400-value)^2-((-300/sqrt(2)):(300/sqrt(2)))^2) + value)
points(hits$dist..ft.*cos((90-hits$spray_angle)*pi/180), hits$dist..ft.*sin((90-hits$spray_angle)*pi/180))
points(160*cos((90-42)*pi/180), 160*sin((90-42)*pi/180))
library(plyr)
bips_17 <- read.csv("~/Documents/Wash U Sports Analytics/SABR18/Batted_Balls_17.csv", stringsAsFactors = FALSE)
launch_angles <- bips_17[, c("player_name", "launch_angle")]
avg_launch_angles <- aggregate(launch_angles$launch_angle, by = list(launch_angles$player_name), FUN = mean)
bips_count <- count(launch_angles, "player_name")
colnames(bips_count) <- c("player_name", "bips")
avg_launch_angles <- merge(bips_count, avg_launch_angles,
by.x = "player_name", by.y = "Group.1")
colnames(avg_launch_angles) <- c("player_name", "bips", "avg_launch")
bips_17$hit <- ifelse(bips_17$events == "single" | bips_17$events == "double" | bips_17$events == "triple" | bips_17$events == "home_run",
1,0)
load("~/Documents/Wash U Sports Analytics/SABR18/ALLINFO.RData")
mean(subset(cleaned_bips_17, player_name == "DJ LeMahieu")$launch_angle)
plot(subset(cleaned_bips_17, player_name == "DJ LeMahieu")$launch_angle, subset(cleaned_bips_17, player_name == "DJ LeMahieu")$launch_speed)
rm(list = ls())
setwd("~/Documents/Applied_Statistical_Programming/ASP_group_project") # Tyler
current.code <- as.package("gaussianComparisons")
library(devtools)
library(roxygen2)
library(testthat)
library(MASS)
current.code <- as.package("gaussianComparisons")
load_all(current.code)
library(ggplot2)
ggplot(data=diamonds)
geom_bar(mapping = aes(x = cut))
?aes
ggplot(data=diamonds)+geom_bar(mapping = aes(x = cut))
ggplot(data = diamonds) +
geom_histogram(mapping = aes(x = carat), binwidth = 0.5)
library(dplyr)
smaller <- diamonds %>%
filter(carat < 3)
ggplot(data = smaller, mapping = aes(x = carat)) +
geom_histogram(binwidth = 0.1)
diamonds2 <- diamonds %>%
mutate(y = ifelse(y < 3 | y > 20, NA, y))
ggplot(data = diamonds2, mapping = aes(x = x, y = y)) +
geom_point(na.rm = TRUE)
library(nycflights13)
nycflights13::flights %>%
mutate(
cancelled = is.na(dep_time),
sched_hour = sched_dep_time %/% 100,
sched_min = sched_dep_time %% 100,
sched_dep_time = sched_hour + sched_min / 60
) %>%
ggplot(mapping = aes(sched_dep_time)) +
geom_freqpoly(mapping = aes(colour = cancelled), binwidth = 1/4)
diamonds %>%
count(color, cut) %>%
ggplot(mapping = aes(x = color, y = cut)) +
geom_tile(mapping = aes(fill = n))
ggplot(data = diamonds) +
geom_point(mapping = aes(x = carat, y = price), alpha = 1 / 100)
by_dest <- group_by(flights, dest)
delay <- summarise(by_dest,
count = n(),
dist = mean(distance, na.rm = TRUE),
delay = mean(arr_delay, na.rm = TRUE)
)
delay <- filter(delay, count > 20, dest != "HNL")
ggplot(data = delay, mapping = aes(x = dist, y = delay)) +
geom_point(aes(size = count), alpha = 1/3) +
geom_smooth(se = FALSE)
ggplot(mpg, aes(displ, hwy)) +
geom_point(aes(color = class)) +
geom_smooth(se = FALSE) +
labs(title = "Fuel efficiency generally decreases with engine size")
best_in_class <- mpg %>%
group_by(class) %>%
filter(row_number(desc(hwy)) == 1)
install.packages("ggrepel")
library(ggrepel)
ggplot(mpg, aes(displ, hwy)) +
geom_point(aes(colour = class)) +
geom_point(size = 3, shape = 1, data = best_in_class) +
ggrepel::geom_label_repel(aes(label = model), data = best_in_class)
data("data_montgomery")
data("exampleHITs")
maxInfoComp(exampleHITs, 2, .01)
maxInfoComp(dataset = exampleHITs, sigma = 2, tolerance = .01)
View(exampleHITs)
head(exampleHITs)
View(exampleHITs)
data("exampleHITs")
head(exampleHITs)
View(exampleHITs)
rm(exampleHITs)
data("exampleHITs")
View(exampleHITs)
data_montgomery <- read.csv("Data/exampleHITs.csv")
rm(exampleHITs)
data_montgomery <- read.csv("Data/exampleHITs.csv")
data_montgomery <- read.csv("exampleHITs.csv")
data_montgomery <- read.csv("gaussianComparisons/exampleHITs.csv")
setwd("~/Documents/Applied_Statistical_Programming/ASP_group_project/gaussianComparisons") # Tyler
data_montgomery <- read.csv("Data/exampleHITs.csv")
setwd("~/Documents/Applied_Statistical_Programming/ASP_group_project/gaussianComparisons") # Tyler
data_montgomery <- read.csv("gaussianComparisons/Data/exampleHITs.csv")
setwd("~/Documents/Applied_Statistical_Programming/ASP_group_project") # Tyler
data_montgomery <- read.csv("gaussianComparisons/Data/exampleHITs.csv")
maxInfoComp(dataset = data_montgomery, sigma = 2, tolerance = .01)
warnings()
finalS(5059, 5091, data_montgomery, 2, .01)
library(microbenchmark)
microbenchmark(finalS(5059, 5091, data_montgomery, 2, .01), times = 1000)
microbenchmark(finalS(5059, 5091, data_montgomery, 2, .01), times = 10)
sSet <- list()
sSet <- append(sSet, c(1,2,3))
sSet
x <- c(1,2,3)
sSet <- append(sSet, c)
sSet
sSet <- append(sSet, x)
lappend(sSet, c)
install.packages("ANTsR")
microbenchmark(omega(data_montgomery, 2), times = 100)
library(ANTsR)
install.packages("ANTsR")
library(ANTsR)
## Load libraries
library(devtools)
library(roxygen2)
library(testthat)
library(MASS)
## Set working directory
setwd("~/Documents/GitHub/ASP_group_project") # Gangyi
## Updates the package based on R scripts written, man and NAMESPACE automatically updates.
# Manually update DESCRIPTION if need be.
current.code <- as.package("gaussianComparisons")
load_all(current.code)
document(current.code)
# rhoSquaredMaker Function [CURRENTLY RETURNING NEGATIVE RESULTS]
# (5059,5091) and (5058,5086) are comparisons that have not been made in the sample data
rhoSquaredMaker(5059, 5091, omega_data, data_clean, 2, 0.01)
## Sample code to test that functions work
# cleaner Function
data_montgomery <- read.csv("gaussianComparisons/Data/exampleHITs.csv")
data_clean <- cleaner(data_montgomery)
omega_data <- omega(data_montgomery,2)
table(unique(omega_data))
draw<-gPrior(omega_data)
draw[data_clean$first==5053]
# rhoSquaredMaker Function [CURRENTLY RETURNING NEGATIVE RESULTS]
# (5059,5091) and (5058,5086) are comparisons that have not been made in the sample data
rhoSquaredMaker(5059, 5091, omega_data, data_clean, 2, 0.01)
rhoSquaredMaker(5058, 5086, omega_data, data_clean, 2, 0.01)
# finalS Function [CURRENTLY DOESNT WORK BECAUSE OF rhoSquaredMaker]
finalS(5059, 5091, omega_data, data_clean, 2, 0.01)
# bigEGStar Function [CURRENTLY DOESNT WORK BECAUSE OF rhoSquaredMaker]
bigEGStar(5059, 5091, omega_data, data_clean, 2, 0.01)
# muMaker Function
# (5059,5091) and (5058,5086) are comparisons that have not been made in the sample data
muMaker(5059, 5091, omega_data, data_clean, 2, 0.1)
# muMaker Function
# (5059,5091) and (5058,5086) are comparisons that have not been made in the sample data
muMaker(5059, 5091, omega_data, data_clean, 2, 0.1)
muMaker(5058, 5086, omega_data, data_clean, 2, 0.1)
muMaker(5100, 5096, omega_data, data_clean, 2, 0.1)
