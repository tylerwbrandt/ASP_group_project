plot(output.vector, type="l") # does that seem a bit cyclical to you?
## Now we might think -- there is a more general case where I want to
## get a bunch of seperate regression estimates on defined subsets of
## the data.
by.var.lm<-function(by.var, formula, data, coef.num){
attach(data)
output.vector<-NULL
for (i in unique(by.var)){
output.vector[which(unique(by.var) == i)]<- lm(formula,
data=data[by.var == i,])$coefficients[coef.num]
}
detach(data)
return(output.vector)
}
plot(by.var.lm(year, voteshare~inparty, OOS, 2), type="l")
# Now I save it for later use
dump("by.var.lm", "by.var.lm.R")
getwd()
rm(by.var.lm)
## Later on I am working with another dataset
website<-url("http://pages.wustl.edu/montgomery/titanic")
titanic<-read.delim(website)
table(titanic$Gender)
table(titanic$Class)
## I want to know how survival is related to gender within each class
source("by.var.lm.R")
by.var.lm(Class, (as.numeric(Survived)-1) ~ Gender, titanic, 2)
sum(sample(1:20, size = 1, replace= TRUE ))
sum(sample(1:20, size = 1, replace= TRUE ))
sum(sample(1:20, size = 1, replace= TRUE ))
sum(sample(1:20, size = 1, replace= TRUE ))
sum(sample(1:20, size = 1, replace= TRUE ))
sum(sample(1:20, size = 1, replace= TRUE )
sum(sample(1:20, size = 1, replace= TRUE )
)
sum(sample(1:20, size = 1, replace= TRUE ))
sum(sample(1:20, size = 1, replace= TRUE ))
sum(sample(1:20, size = 1, replace= TRUE ))
sum(sample(1:100, size = 1, replace = TRUE))
sum(sample(1:100, size = 1, replace = TRUE))
sum(sample(1:100, size = 1, replace = TRUE))
sum(sample(1:100, size = 1, replace = TRUE))
sum(sample(1:100, size = 1, replace = TRUE))
sum(sample(1:100, size = 1, replace = TRUE))
sum(sample(1:100, size = 1, replace = TRUE))
sum(sample(1:100, size = 1, replace = TRUE))
sum(sample(1:100, size = 1, replace = TRUE))
sum(sample(1:100, size = 1, replace = TRUE))
sum(sample(1:100, size = 1, replace = TRUE))
sum(sample(1:100, size = 1, replace = TRUE))
sum(sample(1:100, size = 1, replace = TRUE))
sum(sample(1:100, size = 1, replace = TRUE))
sum(sample(1:100, size = 1, replace = TRUE))
sum(sample(1:100, size = 1, replace = TRUE))
sum(sample(1:100, size = 1, replace = TRUE))
sum(sample(1:100, size = 1, replace = TRUE))
sum(sample(1:100, size = 1, replace = TRUE))
sum(sample(1:100, size = 1, replace = TRUE))
sum(sample(1:100, size = 1, replace = TRUE))
sum(sample(1:100, size = 1, replace = TRUE))
sum(sample(1:100, size = 1, replace = TRUE))
sum(sample(1:100, size = 1, replace = TRUE))
sum(sample(1:100, size = 1, replace = TRUE))
sum(sample(1:100, size = 1, replace = TRUE))
sum(sample(1:100, size = 1, replace = TRUE))
sum(sample(1:100, size = 1, replace = TRUE))
sum(sample(1:100, size = 1, replace = TRUE))
sum(sample(1:100, size = 1, replace = TRUE))
sum(sample(1:100, size = 1, replace = TRUE))
sum(sample(1:100, size = 1, replace = TRUE))
sum(sample(1:100, size = 1, replace = TRUE))
sum(sample(1:100, size = 1, replace = TRUE))
sum(sample(1:100, size = 1, replace = TRUE))
sum(sample(1:100, size = 1, replace = TRUE))
sum(sample(1:100, size = 1, replace = TRUE))
sum(sample(1:100, size = 1, replace = TRUE))
sum(sample(1:100, size = 1, replace = TRUE))
sum(sample(1:100, size = 1, replace = TRUE))
sum(sample(1:20, size = 1, replace = TRUE))
sum(sample(1:20, size = 1, replace = TRUE))
sum(sample(1:20, size = 1, replace = TRUE))
20
sum(sample(1:10, size = 2, replace = TRUE))+15
sum(sample(1:20, size = 1, replace = TRUE))
sum(sample(1:20, size = 1, replace = TRUE))
sum(sample(1:10, size = 2, replace = TRUE))+15
sum(sample(1:20, size = 1, replace = TRUE))
sum(sample(1:20, size = 1, replace = TRUE))
gdata<-list(C(1,1),c(1,2),c(1,3),c(1,4),c(2,1),c(2,2),c(2,3),c(2,4),c(3,1),c(3,2),c(3,3),c(3,4),c(4,1),c(4,2)c(4,3),c(4,4))
gdata<-list(c(1,1),c(1,2),c(1,3),c(1,4),c(2,1),c(2,2),c(2,3),c(2,4),c(3,1),c(3,2),c(3,3),c(3,4),c(4,1),c(4,2)c(4,3),c(4,4))
gdata<-list(c(1,1),c(1,2),c(1,3),c(1,4),c(2,1),c(2,2),c(2,3),c(2,4),c(3,1),c(3,2),c(3,3),c(3,4),c(4,1),c(4,2),c(4,3),c(4,4))
gdata<-list(c(1,1),c(1,2),c(1,3),c(1,4),c(2,1)),c(2,3),c(2,4),c(3,1),c(3,4),c(4,1),c(4,2),c(4,3),c(4,4))
gdata<-list(c(1,1),c(1,2),c(1,3),c(1,4),c(2,1),c(2,3),c(2,4),c(3,1),c(3,4),c(4,1),c(4,2),c(4,3),c(4,4))
gdata<-data.frame(c(1,1),c(1,2),c(1,3),c(1,4),c(2,1),c(2,3),c(2,4),c(3,1),c(3,4),c(4,1),c(4,2),c(4,3),c(4,4))
View(gdata)
gdata<-data.frame(c(1,2),c(1,3),c(1,4),c(2,1),c(2,3),c(2,4),c(3,1),c(3,4),c(4,1),c(4,2),c(4,3))
gdata <- data.frame(c(1,1,1,2,2,2,3,3,4,4,4), c(2,3,4,1,3,4,1,4,1,2,3),
c(1,1,1,-1,-1,-1,-1,1,-1,1,-1))
colnames(gdata) <- c("first", "second", "y")
View(gdata)
omega <-function(dataset,sigma){
omega_matrix <- matrix(data = 0, nrow=(nrow(dataset)),ncol=(nrow(dataset)))
for(i in 1:(nrow(dataset))){
for (j in 1:(nrow(dataset))){
if(dataset$first[i] == dataset$first[j]){
omega_matrix[i,j] <- omega_matrix[i,j] + sigma^2
}
if(dataset$first[i] == dataset$second[j]){
omega_matrix[i,j] <- omega_matrix[i,j] - sigma^2
}
if(dataset$second[i] == dataset$first[j]){
omega_matrix[i,j] <- omega_matrix[i,j] - sigma^2
}
if(dataset$second[i] == dataset$second[j]){
omega_matrix[i,j] <- omega_matrix[i,j] + sigma^2
}
}
}
return (omega_matrix)
}
omega(gdata, 2)
d2logpri<-function(omega,g){
return(-1*solve(omega))
}
d2logpri(omega(gdata,2))
d2logpri<-function(omega,g){
return(-1*solve(omega,diag(1,ncol(omega),nrow(omega))))
}
d2logpri(omega(gdata,2))
gdata <- data.frame(c(1,1,1,2,2,2,3,3,4,4), c(2,3,1,3,4,1,4,1,2,3),
c(1,1,1,-1,-1,-1,-1,1,-1,1,-1))
colnames(gdata) <- c("first", "second", "y")
View(gdata)
omega <-function(dataset,sigma){
omega_matrix <- matrix(data = 0, nrow=(nrow(dataset)),ncol=(nrow(dataset)))
for(i in 1:(nrow(dataset))){
for (j in 1:(nrow(dataset))){
if(dataset$first[i] == dataset$first[j]){
omega_matrix[i,j] <- omega_matrix[i,j] + sigma^2
}
if(dataset$first[i] == dataset$second[j]){
omega_matrix[i,j] <- omega_matrix[i,j] - sigma^2
}
if(dataset$second[i] == dataset$first[j]){
omega_matrix[i,j] <- omega_matrix[i,j] - sigma^2
}
if(dataset$second[i] == dataset$second[j]){
omega_matrix[i,j] <- omega_matrix[i,j] + sigma^2
}
}
}
return (omega_matrix)
}
omega(gdata, 2)
d2logpri<-function(omega,g){
return(-1*solve(omega,diag(1,ncol(omega),nrow(omega))))
}
d2logpri(omega(gdata,2))
d2logpri<-function(omega,g){
omega<-omega+diag(.001,nrow(omega),ncol(omega))
return(-1*solve(omega,diag(1,nrow(omega),ncol(omega))))
}
d2logpri<-(omega(gdata),2)
d2logpri<-(omega(gdata,2),2)
d2logpri(omega(gdata,2),3)
d2logpri<-function(omega,g){
omega<-omega+.0000001)
return(-1*solve(omega,diag(1,nrow(omega),ncol(omega))))
}
d2logpri<-function(omega,g){
omega<-omega+.0000001
return(-1*solve(omega,diag(1,nrow(omega),ncol(omega))))
}
d2logpri(omega(gdata,2),3)
d2logpri<-function(omega,g){
omega<-omega+.0000001
return(-1*solve(omega,diag(1,nrow(omega),ncol(omega))))
}
d2logpri(omega(gdata,2),3)
d2logpri<-function(omega,g){
omega<-omega+.0000001
return(-1*solve(omega))
}
d2logpri(omega(gdata,2),3)
d2logpri<-function(omega,g){
omega<-omega+.001
return(-1*solve(omega))
}
d2logpri(omega(gdata,2),3)
d2logpri<-function(omega,g){
omega<-omega+.01
return(-1*solve(omega))
}
d2logpri(omega(gdata,2),3)
d2logpri<-function(omega,g){
omega<-omega+.01
return(solve(omega))
}
d2logpri(omega(gdata,2),3)
d2logpri<-function(omega,g){
diag(omega)<-diag(omega)+.01
return(solve(omega))
}
d2logpri(omega(gdata,2),3)
d2logpri<-function(omega,g){
diag(omega)<-diag(omega)+.0001
return(solve(omega))
}
d2logpri(omega(gdata,2),3)
d2logpri<-function(omega,g){
diag(omega)<-diag(omega)+.001
return(solve(omega))
}
d2logpri(omega(gdata,2),3)
d2logpri<-function(omega,g){
diag(omega)<-diag(omega)+.01
return(solve(omega))
}
d2logpri(omega(gdata,2),3)
d2logpri<-function(omega,g){
if (det(omega) == 0){
diag(omega)<-diag(omega)+.01}
return(solve(omega))
}
d2logpri<-function(omega,g){
if (det(omega) == 0){
diag(omega)<-diag(omega)+.01}
inv_omega<-(solve(omega))
neg_inv_omega<- -1*(inv_omega)
return(neg_inv_omega)
}
d2logpri(omega(gdata,2),3)
d2LogLike<-function(y,g){
LL<-logLike(y,g)
derivativeLL<-dLogLike(y,g)
output<-diag(x=0,length(y),length(y))
for (i in 1:length(y)){
firstTerm<- ((dnorm(g[i]))^2)/LL^2
secondTerm<-g[i]*derivativeLL[i]
output[i,i]<-(-1*firstTerm)-secondTerm
}
return(output)
}
y1<-c(1,1,-1,1,-1)
g1<-c(2,3,4,5,6)
logLike(y1,g1)
dLogLike(y1,g1)
d2LogLike(y1,g1)
gdata <- data.frame(c(1,1,1,2,2,2,3,3,4,4,4), c(2,3,4,1,3,4,1,4,1,2,3),
c(1,1,1,-1,-1,-1,-1,1,-1,1,-1))
colnames(gdata) <- c("first", "second", "y")
View(gdata)
omega <-function(dataset,sigma){
omega_matrix <- matrix(data = 0, nrow=(nrow(dataset)),ncol=(nrow(dataset)))
for(i in 1:(nrow(dataset))){
for (j in 1:(nrow(dataset))){
if(dataset$first[i] == dataset$first[j]){
omega_matrix[i,j] <- omega_matrix[i,j] + sigma^2
}
if(dataset$first[i] == dataset$second[j]){
omega_matrix[i,j] <- omega_matrix[i,j] - sigma^2
}
if(dataset$second[i] == dataset$first[j]){
omega_matrix[i,j] <- omega_matrix[i,j] - sigma^2
}
if(dataset$second[i] == dataset$second[j]){
omega_matrix[i,j] <- omega_matrix[i,j] + sigma^2
}
}
}
return (omega_matrix)
}
omega(gdata, 2)
omega <-function(dataset,sigma){
omega_matrix <- matrix(data = 0, nrow=(nrow(dataset)),ncol=(nrow(dataset)))
for(i in 1:(nrow(dataset))){
for (j in 1:(nrow(dataset))){
if(dataset$first[i] == dataset$first[j]){
omega_matrix[i,j] <- omega_matrix[i,j] + sigma^2
}
if(dataset$first[i] == dataset$second[j]){
omega_matrix[i,j] <- omega_matrix[i,j] - sigma^2
}
if(dataset$second[i] == dataset$first[j]){
omega_matrix[i,j] <- omega_matrix[i,j] - sigma^2
}
if(dataset$second[i] == dataset$second[j]){
omega_matrix[i,j] <- omega_matrix[i,j] + sigma^2
}
}
}
return (omega_matrix)
}
d2LogLike<-function(y,g){
LL<-logLike(y,g)
derivativeLL<-dLogLike(y,g)
output<-diag(x=0,length(y),length(y))
for (i in 1:length(y)){
firstTerm<- ((dnorm(g[i]))^2)/LL^2
secondTerm<-g[i]*derivativeLL[i]
output[i,i]<-(-1*firstTerm)-secondTerm
}
return(output)
}
d2logpri<-function(omega,g){
if (det(omega) == 0){
diag(omega)<-diag(omega)+.01}
inv_omega<-(solve(omega))
neg_inv_omega<- -1*(inv_omega)
return(neg_inv_omega)
}
omega_test <- omega(gdata, 2)
g_test <- sample(1:10, 11, replace = T)
dlogpri <- function(omega, g){
if (det(omega) == 0){
diag(omega) <- diag(omega) + .01
}
inv_omega <- solve(omega)
neg_inv_omega <- -inv_omega
return (neg_inv_omega %*% g)
}
dlogpri(omega_test, g_test)
diag(omega_test) <- diag(omega_test) + .01
logLike<-function(y,g){
result<-c()
for (i in 1:length(y)){
x<-y[i]*g[i]
xi<-log(pnorm(x,0,1))
result<-c(result,xi)
}
output<-sum(result)
return(output)
}
y1<-c(1,1,-1,1,-1)
g1<-c(2,3,4,5,6)
logLike(y1,g1)
dlogpri <- function(omega, g){
if (det(omega) == 0){
diag(omega) <- diag(omega) + .01
}
inv_omega <- solve(omega)
neg_inv_omega <- -inv_omega
return (neg_inv_omega %*% g)
}
d2LogLike<-function(y,g){
LL<-logLike(y,g)
derivativeLL<-dLogLike(y,g)
output<-diag(x=0,length(y),length(y))
for (i in 1:length(y)){
firstTerm<- ((dnorm(g[i]))^2)/LL^2
secondTerm<-g[i]*derivativeLL[i]
output[i,i]<-(-1*firstTerm)-secondTerm
}
return(output)
}
dLogLike<-function(y,g){
denom<-logLike(y,g)
output<-c()
for (i in 1:length(y)){
num<-y[i]*dnorm(g[i])
output[i]<-num/denom
}
return(output)
}
d2psi<- function(y,g,omega){  #equation 9
}
d2psi<- function(y,g,omega){  #equation 9
}
d2psi<- function(y,g,omega){
}
d2psi<- function(y,g,omega){
output<-(d2LogLike(y,g)+d2logpri(omega,g)
return(output)
}
d2psi<- function(y,g,omega){
output<-(d2LogLike(y,g)+d2logpri(omega,g))
return(output)
}
library(readxl)
PS3_data <- read_excel("C:/Users/Marcus/Downloads/PS3_data.xlsx",
col_types = c("numeric", "numeric", "numeric",
"blank", "numeric", "numeric", "numeric",
"numeric", "numeric"))
View(PS3_data)
excess_amzn<-PS3_data$AMZN - PS3_data$`Risk Free''
excess_BA<-PS3_data$BA - PS3_data$`Risk Free`
excess_nflx<-PS3_data$NFLX - PS3_data$`Risk Free`
excess_amzn<-PS3_data$AMZN - PS3_data$`Risk Free'
excess_BA<-PS3_data$BA - PS3_data$`Risk Free`
excess_nflx<-PS3_data$NFLX - PS3_data$`Risk Free`
excess_XOM<-PS3_data$XOM - PS3_data$`Risk Free`
excess_fdx<-PS3_data$FDX - PS3_data$`Risk Free`
excess_amzn<-PS3_data$AMZN - PS3_data$`Risk Free`
excess_BA<-PS3_data$BA - PS3_data$`Risk Free`
excess_nflx<-PS3_data$NFLX - PS3_data$`Risk Free`
excess_XOM<-PS3_data$XOM - PS3_data$`Risk Free`
excess_fdx<-PS3_data$FDX - PS3_data$`Risk Free`
excess_market<-PS3_data$Market - PS3_data$`Risk Free`
lm(excess_amzn ~ excess_market)
lm(excess_BA ~ excess_market)
lm(excess_nflx ~ excess_market)
lm(excess_fdx ~ excess_market)
lm(excess_xom ~ excess_market)
lm(excess_XOM ~ excess_market)
lm(excess_amzn ~ excess_market)
excess_XOM<-PS3_data$XOM - PS3_data$`Risk Free`
lm(excess_XOM ~ excess_market)
lm(excess_fdx ~ excess_market)
lm(excess_nflx ~ excess_market)
lm(excess_BA ~ excess_market)
var(PS3_data$BA)
var(PS3_data$AMZN)
var(PS3_data$BA)
var(PS3_data$FDX)
var(PS3_data$XOM)
var(PS3_data$NFLX)
var(PS3_data$Market)
varepsilon<- function(stock,market,beta){
epsil<-var(stock)-(var(market)*beta^2)
return(epsil)
}
varepsilon(PS3_data$AMZN,PS3_data$Market,1.194)
varepsilon(PS3_data$BA,PS3_data$Market,.900211)
varepsilon(PS3_data$NFLX,PS3_data$Market,1.656)
varepsilon(PS3_data$FDX,PS3_data$Market,1.3236)
varepsilon(PS3_data$XOM,PS3_data$Market,.5679721)
markmean<-mean(PS3_data$Market)
markmean<-mean(excess_market)
markvar<-var(PS3_data$Market)
w0<-function(alpha,stock,varep){
top<-alpha/varep
bottom<-markmean/markvar
return(top/bottom)
}
w0(.001055,PS3_data$AMZN,.0001475)
w0(.001055,PS3_data$AMZN,.0001475)
w0(-.0005275,PS3_data$XOM,.00004351535)
w0(.0003758,PS3_data$FDX,.00008268)
w0(.0008021,PS3_data$NFLX,.000258676)
w0(.002107,PS3_data$BA,.000107)
w0A<-w0(.001055,PS3_data$AMZN,.0001475)
w0X<-w0(-.0005275,PS3_data$XOM,.00004351535)
w0F<-w0(.0003758,PS3_data$FDX,.00008268)
w0N<-w0(.0008021,PS3_data$NFLX,.000258676)
w0B<-w0(.002107,PS3_data$BA,.000107)
return(answer)
wA<-function(w0,beta){
answer<- w0/(1+((1-beta)*w0))
return(answer)
}
wA(w0A,1.194020)
wA(w0X,.5679721)
wA(w0F,1.3236)
wA(w0N,1.6564)
wA(w0B,.900211)
wA(w0A,1.194020)+wA(w0X,.5679721)+wA(w0F,1.3236)+wA(w0N,1.6564)+wA(w0B,.900211)
1-wA(w0A,1.194020)+wA(w0X,.5679721)+wA(w0F,1.3236)+wA(w0N,1.6564)+wA(w0B,.900211)
wA(w0A,1.194020)+wA(w0X,.5679721)+wA(w0F,1.3236)+wA(w0N,1.6564)+wA(w0B,.900211)
1-(wA(w0A,1.194020)+wA(w0X,.5679721)+wA(w0F,1.3236)+wA(w0N,1.6564)+wA(w0B,.900211))
lm(excess_XOM ~ excess_market)
1-(wA(w0A,1.194020)+wA(w0X,.5679721)+wA(w0F,1.3236)+wA(w0N,1.6564)+wA(w0B,.900211))     #find the market weight
library(readxl)
PS3_data <- read_excel("Finance PS3/PS3_data.xlsx")
View(PS3_data)
library(readxl)
PS3_data_raw <- read_excel("Finance PS3/PS3_data_raw.xlsx")
View(PS3_data_raw)
lm(excess_amzn ~ excess_market)      #Linear regression of excess returns of the market on the excess returns on the stock
lm(excess_BA ~ excess_market)       #or is it the other way around? I can never remember. the stocks are the dependant variable
lm(excess_nflx ~ excess_market)
lm(excess_fdx ~ excess_market)
lm(excess_XOM ~ excess_market)
(.001055*w0A-.0005275*w0X+.0003758*w0F+.0008021*w0N+.002107w0B)
(.001055*w0A-.0005275*w0X+.0003758*w0F+.0008021*w0N+.002107*w0B)
setwd("~/ASP_group_project")
## Load libraries
library(devtools)
library(roxygen2)
library(testthat)
## Updates the package based on R scripts written, man and NAMESPACE automatically updates.
# Manually update DESCRIPTION if need be.
current.code <- as.package("gaussianComparisons")
load_all(current.code)
check(current.code)
# omega Function (Equation 1.5)
gdata <- data.frame(c(1,1,1,2,2,2,3,3,4,4,4), c(2,3,4,1,3,4,1,4,1,2,3),
c(1,1,1,-1,-1,-1,-1,1,-1,1,-1))
colnames(gdata) <- c("first", "second", "y")
#View(gdata)
omega(gdata, 2)
# dLogPri Function (Equation 4)
omega_test <- omega(gdata, 2)
g_test <- sample(1:10, 11, replace = T)
dLogPri(omega_test, g_test)
diag(omega_test) <- diag(omega_test) + .01
(-solve(omega_test)) %*% g_test
document(current.code)
exampleHITs <- read.csv("C:/Users/Marcus/Downloads/exampleHITs.csv")
View(exampleHITs)
cleaner(exampleHITs)
?omega
omega(exampleHITs, 4)
view(omega(exampleHITs, 4))
x<- omega(exampleHITs, 4)
view(x
)
veiw(x)
view(x)
View(x)
View(x)
?newtonMethodPrequel
?newtonMethod
