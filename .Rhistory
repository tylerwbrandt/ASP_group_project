(-300/sqrt(2))^2
lines(lowess(-300/sqrt(2):300/sqrt(2), sqrt((400-value)^2-(-300/sqrt(2):300/sqrt(2))^2) + value))
plot (-250:250, 0:500, type="n", bg="white", axes = FALSE)
lines(c(0,90/sqrt(2),0,-90/sqrt(2),0),c(0,90/sqrt(2),180/sqrt(2),90/sqrt(2),0), col=c("black"))
lines(c(0,300/sqrt(2)), c(0,300/sqrt(2)), col = c("black"))
lines(c(0,-300/sqrt(2)), c(0,300/sqrt(2)), col = c("black"))
points(hits$dist..ft.*cos((90-hits$spray_angle)*pi/180), hits$dist..ft.*sin((90-hits$spray_angle)*pi/180))
lines(lowess(-300/sqrt(2):300/sqrt(2), sqrt((400-value)^2-(-300/sqrt(2):300/sqrt(2))^2) + value))
sqrt((400-value)^2-(-300/sqrt(2):300/sqrt(2))^2)
plot (-250:250, 0:500, type="n", bg="white", axes = FALSE)
lines(c(0,90/sqrt(2),0,-90/sqrt(2),0),c(0,90/sqrt(2),180/sqrt(2),90/sqrt(2),0), col=c("black"))
lines(c(0,300/sqrt(2)), c(0,300/sqrt(2)), col = c("black"))
lines(c(0,-300/sqrt(2)), c(0,300/sqrt(2)), col = c("black"))
points(hits$dist..ft.*cos((90-hits$spray_angle)*pi/180), hits$dist..ft.*sin((90-hits$spray_angle)*pi/180))
value <- 200 + 150/sqrt(2) - (450/sqrt(2))/(4*sqrt(2) - 3)
lines(lowess(-300/sqrt(2):300/sqrt(2), sqrt((400-value)^2-(-300/sqrt(2):300/sqrt(2))^2) + value))
sqrt((400-value)^2-(-300/sqrt(2):300/sqrt(2))^2)
sqrt((400-value)^2-(-300/sqrt(2):300/sqrt(2))^2) + value
-300/sqrt(2):300/sqrt(2)
(-300/sqrt(2)):(300/sqrt(2))
lines(lowess((-300/sqrt(2)):(300/sqrt(2)), sqrt((400-value)^2-((-300/sqrt(2)):(300/sqrt(2)))^2) + value))
lines(lowess((-300/sqrt(2)):(300/sqrt(2)), sqrt((400-value)^2-((-300/sqrt(2)):(300/sqrt(2)))^2)))
sqrt((400-value)^2-(-300/sqrt(2):300/sqrt(2))^2)
sqrt((400-value)^2-((-300/sqrt(2)):(300/sqrt(2)))^2)
sqrt((400-value)^2-((-300/sqrt(2)):(300/sqrt(2)))^2) + value
lines((-300/sqrt(2)):(300/sqrt(2)), sqrt((400-value)^2-((-300/sqrt(2)):(300/sqrt(2)))^2) + value)
plot (-250:250, 0:500, type="n", bg="white", axes = FALSE)
lines(c(0,90/sqrt(2),0,-90/sqrt(2),0),c(0,90/sqrt(2),180/sqrt(2),90/sqrt(2),0), col=c("black"))
lines(c(0,300/sqrt(2)), c(0,300/sqrt(2)), col = c("black"))
lines(c(0,-300/sqrt(2)), c(0,300/sqrt(2)), col = c("black"))
points(hits$dist..ft.*cos((90-hits$spray_angle)*pi/180), hits$dist..ft.*sin((90-hits$spray_angle)*pi/180))
lines((-300/sqrt(2)):(300/sqrt(2)), sqrt((400-value)^2-((-300/sqrt(2)):(300/sqrt(2)))^2) + value)
spray_chart_hitter <- function(hitter, data, left = 300, center = 400, right = 300){
spray_subset <- subset(data, hitter_id == hitter, !is.na(spray_angle))
plot(-300:300, 0:600, type = "n", bg = "white")
# Create field outline
lines(c(0,90/sqrt(2),0,-90/sqrt(2),0),c(0,90/sqrt(2),180/sqrt(2),90/sqrt(2),0), col=c("black"))
lines(c(0,right/sqrt(2)), c(0,right/sqrt(2)), col = c("black"))
lines(c(0,-left/sqrt(2)), c(0,left/sqrt(2)), col = c("black"))
# Create fence based on left,center,right dimensions
y_mean <- c((left/sqrt(2) + center)/2, (right/sqrt(2) + center))
x_mean <- c((left/sqrt(2))/2, (right/sqrt(2))/2)
m <- c((center-left/sqrt(2))/(left/sqrt(2)), (center-right/sqrt(2))/(right/sqrt(2)))
new_m < c(-1/m[1], 1/m[2])
horiz <- (y_mean[2] - y_mean[1] + m[1]*x_mean[1] - m[2]*x_mean[2])/(m[1] = m[2])
vert <- m[1]*(horiz-x_mean[1]) + y_mean[1]
r_sq <- (horiz^2 + (center-vert)^2)
lines((-left/sqrt(2)):(right/sqrt(2)), sqrt(r_sq - ((-left/sqrt(2)):(right/sqrt(2)) - horiz)^2) + vert)
points(spray_subset$dist*cos((90-spray_subset$spray_angle)*pi/180), spray_subset$dist*sin((90-spray_subset$spray_angle)*pi/180))
}
View(oakland_fsu)
spray_chart_hitter(tjoakld42, oakland_fsu)
spray_chart_hitter("tjoakld42", oakland_fsu)
spray_chart_hitter <- function(hitter, data, left = 300, center = 400, right = 300){
spray_subset <- subset(data, hitter_id == hitter, !is.na(spray_angle))
plot(-300:300, 0:600, type = "n", bg = "white")
# Create field outline
lines(c(0,90/sqrt(2),0,-90/sqrt(2),0),c(0,90/sqrt(2),180/sqrt(2),90/sqrt(2),0), col=c("black"))
lines(c(0,right/sqrt(2)), c(0,right/sqrt(2)), col = c("black"))
lines(c(0,-left/sqrt(2)), c(0,left/sqrt(2)), col = c("black"))
# Create fence based on left,center,right dimensions
y_mean <- c((left/sqrt(2) + center)/2, (right/sqrt(2) + center))
x_mean <- c((left/sqrt(2))/2, (right/sqrt(2))/2)
m <- c((center-left/sqrt(2))/(left/sqrt(2)), (center-right/sqrt(2))/(right/sqrt(2)))
new_m <- c(-1/m[1], 1/m[2])
horiz <- (y_mean[2] - y_mean[1] + new_m[1]*x_mean[1] - new_m[2]*x_mean[2])/(new_m[1] = new_m[2])
vert <- new_m[1]*(horiz-x_mean[1]) + y_mean[1]
r_sq <- (horiz^2 + (center-vert)^2)
lines((-left/sqrt(2)):(right/sqrt(2)), sqrt(r_sq - ((-left/sqrt(2)):(right/sqrt(2)) - horiz)^2) + vert)
points(spray_subset$dist*cos((90-spray_subset$spray_angle)*pi/180), spray_subset$dist*sin((90-spray_subset$spray_angle)*pi/180))
}
spray_chart_hitter("tjoakld42", oakland_fsu)
spray_chart_hitter <- function(hitter, data, left = 300, center = 400, right = 300){
spray_subset <- subset(data, hitter_id == hitter, !is.na(spray_angle))
plot(-300:300, 0:600, type = "n", bg = "white")
# Create field outline
lines(c(0,90/sqrt(2),0,-90/sqrt(2),0),c(0,90/sqrt(2),180/sqrt(2),90/sqrt(2),0), col=c("black"))
lines(c(0,right/sqrt(2)), c(0,right/sqrt(2)), col = c("black"))
lines(c(0,-left/sqrt(2)), c(0,left/sqrt(2)), col = c("black"))
# Create fence based on left,center,right dimensions
y_mean <- c((left/sqrt(2) + center)/2, (right/sqrt(2) + center))
x_mean <- c((left/sqrt(2))/2, (right/sqrt(2))/2)
m <- c((center-left/sqrt(2))/(left/sqrt(2)), (center-right/sqrt(2))/(right/sqrt(2)))
new_m <- c(-1/m[1], 1/m[2])
horiz <- (y_mean[2] - y_mean[1] + new_m[1]*x_mean[1] - new_m[2]*x_mean[2])/(new_m[1] = new_m[2])
vert <- new_m[1]*(horiz-x_mean[1]) + y_mean[1]
r_sq <- (horiz^2 + (center-vert)^2)
lines((-300/sqrt(2)):(right/sqrt(2)), sqrt(r_sq - ((-300/sqrt(2)):(right/sqrt(2)) - horiz)^2) + vert)
points(spray_subset$dist*cos((90-spray_subset$spray_angle)*pi/180), spray_subset$dist*sin((90-spray_subset$spray_angle)*pi/180))
}
spray_chart_hitter("tjoakld42", oakland_fsu)
spray_chart_hitter("tjoakld42", oakland_fsu, 500, 400, 300)
spray_chart_hitter("tjoakld42", oakland_fsu, 300, 400, 500)
spray_chart_hitter("tjoakld42", oakland_fsu, 300, 400, 300)
spray_chart_hitter("tjoakld42", oakland_fsu, 300, 400, 500)
spray_chart_hitter("tjoakld42", oakland_fsu, 300, 400, 400)
spray_chart_hitter("tjoakld42", oakland_fsu, 300, 400, 200)
spray_chart_hitter("tjoakld42", oakland_fsu, 300, 400, 100)
spray_chart_hitter("tjoakld42", oakland_fsu, 300, 400, 301)
spray_chart_hitter("tjoakld42", oakland_fsu, 300, 400, 350)
spray_chart_hitter("tjoakld42", oakland_fsu, 300, 400, 300)
spray_chart_hitter("tjoakld42", oakland_fsu, 300, 400, 325)
spray_chart_hitter("tjoakld42", oakland_fsu, 350, 400, 300)
spray_chart_hitter("tjoakld42", oakland_fsu, 300, 400, 300)
left <- 300
center <- 400
right <- 300
plot(-300:300, 0:600, type = "n", bg = "white")
lines(c(0,90/sqrt(2),0,-90/sqrt(2),0),c(0,90/sqrt(2),180/sqrt(2),90/sqrt(2),0), col=c("black"))
lines(c(0,right/sqrt(2)), c(0,right/sqrt(2)), col = c("black"))
lines(c(0,-left/sqrt(2)), c(0,left/sqrt(2)), col = c("black"))
spray_chart_hitter <- function(hitter, data, left = 300, center = 400, right = 300){
spray_subset <- subset(data, hitter_id == hitter, !is.na(spray_angle))
plot(-300:300, 0:600, type = "n", bg = "white", axes = FALSE)
# Create field outline
lines(c(0,90/sqrt(2),0,-90/sqrt(2),0),c(0,90/sqrt(2),180/sqrt(2),90/sqrt(2),0), col=c("black"))
lines(c(0,right/sqrt(2)), c(0,right/sqrt(2)), col = c("black"))
lines(c(0,-left/sqrt(2)), c(0,left/sqrt(2)), col = c("black"))
# Create fence based on left,center,right dimensions
y_mean <- c((left/sqrt(2) + center)/2, (right/sqrt(2) + center))
x_mean <- c((left/sqrt(2))/2, (right/sqrt(2))/2)
m <- c((center-left/sqrt(2))/(left/sqrt(2)), (center-right/sqrt(2))/(right/sqrt(2)))
new_m <- c(-1/m[1], 1/m[2])
horiz <- (y_mean[2] - y_mean[1] + new_m[1]*x_mean[1] - new_m[2]*x_mean[2])/(new_m[1] = new_m[2])
vert <- new_m[1]*(horiz-x_mean[1]) + y_mean[1]
r_sq <- (horiz^2 + (center-vert)^2)
lines((-left/sqrt(2)):(right/sqrt(2)), sqrt(r_sq - ((-left/sqrt(2)):(right/sqrt(2)) - horiz)^2) + vert)
points(spray_subset$dist*cos((90-spray_subset$spray_angle)*pi/180), spray_subset$dist*sin((90-spray_subset$spray_angle)*pi/180))
}
spray_chart_hitter("tjoakld42", oakland_fsu, 300, 400, 300)
y_mean <- c((left/sqrt(2) + center)/2, (right/sqrt(2) + center))
x_mean <- c((left/sqrt(2))/2, (right/sqrt(2))/2)
y_mean <- c((left/sqrt(2) + center)/2, (right/sqrt(2) + center)/2)
spray_chart_hitter <- function(hitter, data, left = 300, center = 400, right = 300){
spray_subset <- subset(data, hitter_id == hitter, !is.na(spray_angle))
plot(-300:300, 0:600, type = "n", bg = "white", axes = FALSE)
# Create field outline
lines(c(0,90/sqrt(2),0,-90/sqrt(2),0),c(0,90/sqrt(2),180/sqrt(2),90/sqrt(2),0), col=c("black"))
lines(c(0,right/sqrt(2)), c(0,right/sqrt(2)), col = c("black"))
lines(c(0,-left/sqrt(2)), c(0,left/sqrt(2)), col = c("black"))
# Create fence based on left,center,right dimensions
y_mean <- c((left/sqrt(2) + center)/2, (right/sqrt(2) + center)/2)
x_mean <- c((left/sqrt(2))/2, (right/sqrt(2))/2)
m <- c((center-left/sqrt(2))/(left/sqrt(2)), (center-right/sqrt(2))/(right/sqrt(2)))
new_m <- c(-1/m[1], 1/m[2])
horiz <- (y_mean[2] - y_mean[1] + new_m[1]*x_mean[1] - new_m[2]*x_mean[2])/(new_m[1] = new_m[2])
vert <- new_m[1]*(horiz-x_mean[1]) + y_mean[1]
r_sq <- (horiz^2 + (center-vert)^2)
lines((-left/sqrt(2)):(right/sqrt(2)), sqrt(r_sq - ((-left/sqrt(2)):(right/sqrt(2)) - horiz)^2) + vert)
points(spray_subset$dist*cos((90-spray_subset$spray_angle)*pi/180), spray_subset$dist*sin((90-spray_subset$spray_angle)*pi/180))
}
spray_chart_hitter("tjoakld42", oakland_fsu, 300, 400, 300)
spray_chart_hitter("tjoakld42", oakland_fsu)
m <- c((center-left/sqrt(2))/(left/sqrt(2)), (center-right/sqrt(2))/(right/sqrt(2)))
new_m <- c(-1/m[1], 1/m[2])
horiz <- (y_mean[2] - y_mean[1] + new_m[1]*x_mean[1] - new_m[2]*x_mean[2])/(new_m[1] = new_m[2])
vert <- new_m[1]*(horiz-x_mean[1]) + y_mean[1]
spray_chart_hitter <- function(hitter, data, left = 300, center = 400, right = 300){
spray_subset <- subset(data, hitter_id == hitter, !is.na(spray_angle))
plot(-300:300, 0:600, type = "n", bg = "white", axes = FALSE)
# Create field outline
lines(c(0,90/sqrt(2),0,-90/sqrt(2),0),c(0,90/sqrt(2),180/sqrt(2),90/sqrt(2),0), col=c("black"))
lines(c(0,right/sqrt(2)), c(0,right/sqrt(2)), col = c("black"))
lines(c(0,-left/sqrt(2)), c(0,left/sqrt(2)), col = c("black"))
# Create fence based on left,center,right dimensions
y_mean <- c((left/sqrt(2) + center)/2, (right/sqrt(2) + center)/2)
x_mean <- c((left/sqrt(2))/2, (right/sqrt(2))/2)
m <- c((center-left/sqrt(2))/(left/sqrt(2)), (center-right/sqrt(2))/(right/sqrt(2)))
new_m <- c(-1/m[1], 1/m[2])
horiz <- (y_mean[2] - y_mean[1] + new_m[1]*x_mean[1] - new_m[2]*x_mean[2])/(new_m[1] - new_m[2])
vert <- new_m[1]*(horiz-x_mean[1]) + y_mean[1]
r_sq <- (horiz^2 + (center-vert)^2)
lines((-left/sqrt(2)):(right/sqrt(2)), sqrt(r_sq - ((-left/sqrt(2)):(right/sqrt(2)) - horiz)^2) + vert)
points(spray_subset$dist*cos((90-spray_subset$spray_angle)*pi/180), spray_subset$dist*sin((90-spray_subset$spray_angle)*pi/180))
}
spray_chart_hitter("tjoakld42", oakland_fsu)
horiz <- (y_mean[2] - y_mean[1] + new_m[1]*x_mean[1] - new_m[2]*x_mean[2])/(new_m[1] - new_m[2])
new_m <- c(1/m[1], 1/m[2])
new_m <- c(-1/m[1], 1/m[2])
new_m <- c(-1/m[1], 1/m[2])
horiz <- (y_mean[2] - y_mean[1] + new_m[1]*x_mean[1] - new_m[2]*x_mean[2])/(new_m[1] - new_m[2])
horiz <- (y_mean[2] - y_mean[1] + new_m[1]*x_mean[1] - new_m[2]*x_mean[2])/(new_m[1] - new_m[2])
spray_chart_hitter <- function(hitter, data, left = 300, center = 400, right = 300){
spray_subset <- subset(data, hitter_id == hitter, !is.na(spray_angle))
plot(-300:300, 0:600, type = "n", bg = "white", axes = FALSE)
# Create field outline
lines(c(0,90/sqrt(2),0,-90/sqrt(2),0),c(0,90/sqrt(2),180/sqrt(2),90/sqrt(2),0), col=c("black"))
lines(c(0,right/sqrt(2)), c(0,right/sqrt(2)), col = c("black"))
lines(c(0,-left/sqrt(2)), c(0,left/sqrt(2)), col = c("black"))
# Create fence based on left,center,right dimensions
y_mean <- c((left/sqrt(2) + center)/2, (right/sqrt(2) + center)/2)
x_mean <- c(-(left/sqrt(2))/2, (right/sqrt(2))/2)
m <- c((center-left/sqrt(2))/(left/sqrt(2)), (center-right/sqrt(2))/(right/sqrt(2)))
new_m <- c(-1/m[1], 1/m[2])
horiz <- (y_mean[2] - y_mean[1] + new_m[1]*x_mean[1] - new_m[2]*x_mean[2])/(new_m[1] - new_m[2])
vert <- new_m[1]*(horiz-x_mean[1]) + y_mean[1]
r_sq <- (horiz^2 + (center-vert)^2)
lines((-left/sqrt(2)):(right/sqrt(2)), sqrt(r_sq - ((-left/sqrt(2)):(right/sqrt(2)) - horiz)^2) + vert)
points(spray_subset$dist*cos((90-spray_subset$spray_angle)*pi/180), spray_subset$dist*sin((90-spray_subset$spray_angle)*pi/180))
}
spray_chart_hitter("tjoakld42", oakland_fsu)
debug(by.var.lm)
by.var.lm(chalquality, voteshare ~ year, OOS, 2)
undebug(by.var.lm)
debug(spray_chart_hitter)
spray_chart_hitter("tjoakld42", oakland_fsu)
function(hitter, data, left = 300, center = 400, right = 300){
spray_subset <- subset(data, hitter_id == hitter, !is.na(spray_angle))
plot(-300:300, 0:600, type = "n", bg = "white", axes = FALSE)
# Create field outline
lines(c(0,90/sqrt(2),0,-90/sqrt(2),0),c(0,90/sqrt(2),180/sqrt(2),90/sqrt(2),0), col=c("black"))
lines(c(0,right/sqrt(2)), c(0,right/sqrt(2)), col = c("black"))
lines(c(0,-left/sqrt(2)), c(0,left/sqrt(2)), col = c("black"))
# Create fence based on left,center,right dimensions
y_mean <- c((left/sqrt(2) + center)/2, (right/sqrt(2) + center)/2)
x_mean <- c(-(left/sqrt(2))/2, (right/sqrt(2))/2)
m <- c((center-left/sqrt(2))/(left/sqrt(2)), (center-right/sqrt(2))/(right/sqrt(2)))
new_m <- c(-1/m[1], 1/m[2])
horiz <- (y_mean[2] - y_mean[1] + new_m[1]*x_mean[1] - new_m[2]*x_mean[2])/(new_m[1] - new_m[2])
vert <- new_m[1]*(horiz-x_mean[1]) + y_mean[1]
r_sq <- (horiz^2 + (center-vert)^2)
lines((-left/sqrt(2)):(right/sqrt(2)), sqrt(r_sq - ((-left/sqrt(2)):(right/sqrt(2)) - horiz)^2) + vert)
points(spray_subset$dist*cos((90-spray_subset$spray_angle)*pi/180), spray_subset$dist*sin((90-spray_subset$spray_angle)*pi/180))
}
spray_subset <- subset(data, hitter_id == hitter, !is.na(spray_angle))
plot(-300:300, 0:600, type = "n", bg = "white", axes = FALSE)
undebug(spray_chart_hitter)
spray_chart_hitter("tj42oakld", oakland_fsu)
x = <- (121 +- sqrt(121^2 - 4 * 2 * (-4439.75))/4
x <- (121 +- sqrt(121^2 - 4 * 2 * (-4439.75))/4
)
x <- (121 + sqrt(121^2 - 4 * 2 * (-4439.75)))/4
x <- (121 - sqrt(121^2 - 4 * 2 * (-4439.75)))/4
x <- (121 + sqrt(121^2 - 4 * 2 * (-4439.75)))/4
x*sqrt(2)
spray_chart_hitter <- function(hitter, data, left = 300, center = 400, right = 300){
spray_subset <- subset(data, hitter_id == hitter, !is.na(spray_angle))
plot(-300:300, 0:600, type = "n", bg = "white", axes = FALSE)
# Create field outline
lines(c(0,90/sqrt(2),0,-90/sqrt(2),0),c(0,90/sqrt(2),180/sqrt(2),90/sqrt(2),0), col=c("black"))
lines(c(0,right/sqrt(2)), c(0,right/sqrt(2)), col = c("black"))
lines(c(0,-left/sqrt(2)), c(0,left/sqrt(2)), col = c("black"))
# Create fence based on left,center,right dimensions
y_mean <- c((left/sqrt(2) + center)/2, (right/sqrt(2) + center)/2)
x_mean <- c(-(left/sqrt(2))/2, (right/sqrt(2))/2)
m <- c((center-left/sqrt(2))/(left/sqrt(2)), (center-right/sqrt(2))/(right/sqrt(2)))
new_m <- c(-1/m[1], 1/m[2])
horiz <- (y_mean[2] - y_mean[1] + new_m[1]*x_mean[1] - new_m[2]*x_mean[2])/(new_m[1] - new_m[2])
vert <- new_m[1]*(horiz-x_mean[1]) + y_mean[1]
r_sq <- (horiz^2 + (center-vert)^2)
lines((-left/sqrt(2)):(right/sqrt(2)), sqrt(r_sq - ((-left/sqrt(2)):(right/sqrt(2)) - horiz)^2) + vert)
points(spray_subset$dist*cos((90-spray_subset$spray_angle)*pi/180), spray_subset$dist*sin((90-spray_subset$spray_angle)*pi/180))
points((-(121 + sqrt(121^2 - 4 * 2 * (-4439.75)))/4):((121 + sqrt(121^2 - 4 * 2 * (-4439.75)))/4),
sqrt(95^2 - ((-(121 + sqrt(121^2 - 4 * 2 * (-4439.75)))/4):((121 + sqrt(121^2 - 4 * 2 * (-4439.75)))/4))^2) + 60.5)
}
spray_chart_hitter("tj42oakld", oakland_fsu)
spray_chart_hitter <- function(hitter, data, left = 300, center = 400, right = 300){
spray_subset <- subset(data, hitter_id == hitter, !is.na(spray_angle))
plot(-300:300, 0:600, type = "n", bg = "white", axes = FALSE)
# Create field outline
lines(c(0,90/sqrt(2),0,-90/sqrt(2),0),c(0,90/sqrt(2),180/sqrt(2),90/sqrt(2),0), col=c("black"))
lines(c(0,right/sqrt(2)), c(0,right/sqrt(2)), col = c("black"))
lines(c(0,-left/sqrt(2)), c(0,left/sqrt(2)), col = c("black"))
# Create fence based on left,center,right dimensions
y_mean <- c((left/sqrt(2) + center)/2, (right/sqrt(2) + center)/2)
x_mean <- c(-(left/sqrt(2))/2, (right/sqrt(2))/2)
m <- c((center-left/sqrt(2))/(left/sqrt(2)), (center-right/sqrt(2))/(right/sqrt(2)))
new_m <- c(-1/m[1], 1/m[2])
horiz <- (y_mean[2] - y_mean[1] + new_m[1]*x_mean[1] - new_m[2]*x_mean[2])/(new_m[1] - new_m[2])
vert <- new_m[1]*(horiz-x_mean[1]) + y_mean[1]
r_sq <- (horiz^2 + (center-vert)^2)
lines((-left/sqrt(2)):(right/sqrt(2)), sqrt(r_sq - ((-left/sqrt(2)):(right/sqrt(2)) - horiz)^2) + vert)
points(spray_subset$dist*cos((90-spray_subset$spray_angle)*pi/180), spray_subset$dist*sin((90-spray_subset$spray_angle)*pi/180))
lines((-(121 + sqrt(121^2 - 4 * 2 * (-4439.75)))/4):((121 + sqrt(121^2 - 4 * 2 * (-4439.75)))/4),
sqrt(95^2 - ((-(121 + sqrt(121^2 - 4 * 2 * (-4439.75)))/4):((121 + sqrt(121^2 - 4 * 2 * (-4439.75)))/4))^2) + 60.5)
}
spray_chart_hitter("tj42oakld", oakland_fsu)
x <- (121 + sqrt(121^2 - 4 * 2 * (60.5^2-90^2)))/4
x <- (121 + sqrt(121^2 - 4 * 2 * (60.5^2-90^2)))/4
x <- (121 + sqrt(121^2 - 4 * 2 * (60.5^2-95^2)))/4
spray_chart_hitter <- function(hitter, data, left = 300, center = 400, right = 300){
spray_subset <- subset(data, hitter_id == hitter, !is.na(spray_angle))
plot(-300:300, 0:600, type = "n", bg = "white", axes = FALSE)
# Create field outline
lines(c(0,90/sqrt(2),0,-90/sqrt(2),0),c(0,90/sqrt(2),180/sqrt(2),90/sqrt(2),0), col=c("black"))
lines(c(0,right/sqrt(2)), c(0,right/sqrt(2)), col = c("black"))
lines(c(0,-left/sqrt(2)), c(0,left/sqrt(2)), col = c("black"))
# Create fence based on left,center,right dimensions
y_mean <- c((left/sqrt(2) + center)/2, (right/sqrt(2) + center)/2)
x_mean <- c(-(left/sqrt(2))/2, (right/sqrt(2))/2)
m <- c((center-left/sqrt(2))/(left/sqrt(2)), (center-right/sqrt(2))/(right/sqrt(2)))
new_m <- c(-1/m[1], 1/m[2])
horiz <- (y_mean[2] - y_mean[1] + new_m[1]*x_mean[1] - new_m[2]*x_mean[2])/(new_m[1] - new_m[2])
vert <- new_m[1]*(horiz-x_mean[1]) + y_mean[1]
r_sq <- (horiz^2 + (center-vert)^2)
lines((-left/sqrt(2)):(right/sqrt(2)), sqrt(r_sq - ((-left/sqrt(2)):(right/sqrt(2)) - horiz)^2) + vert)
points(spray_subset$dist*cos((90-spray_subset$spray_angle)*pi/180), spray_subset$dist*sin((90-spray_subset$spray_angle)*pi/180))
lines((-(121 + sqrt(121^2 - 4 * 2 * (-4439.75)))/4):((121 + sqrt(121^2 - 4 * 2 * (-4439.75)))/4),
sqrt(95^2 - ((-(121 + sqrt(121^2 - 4 * 2 * (60.5^2 - 95^2)))/4):((121 + sqrt(121^2 - 4 * 2 * (60.5^2-95^2)))/4))^2) + 60.5)
}
spray_chart_hitter("tj42oakld", oakland_fsu)
spray_chart_hitter <- function(hitter, data, left = 300, center = 400, right = 300){
spray_subset <- subset(data, hitter_id == hitter, !is.na(spray_angle))
plot(-300:300, 0:600, type = "n", bg = "white", axes = FALSE)
# Create field outline
lines(c(0,90/sqrt(2),0,-90/sqrt(2),0),c(0,90/sqrt(2),180/sqrt(2),90/sqrt(2),0), col=c("black"))
lines(c(0,right/sqrt(2)), c(0,right/sqrt(2)), col = c("black"))
lines(c(0,-left/sqrt(2)), c(0,left/sqrt(2)), col = c("black"))
# Create fence based on left,center,right dimensions
y_mean <- c((left/sqrt(2) + center)/2, (right/sqrt(2) + center)/2)
x_mean <- c(-(left/sqrt(2))/2, (right/sqrt(2))/2)
m <- c((center-left/sqrt(2))/(left/sqrt(2)), (center-right/sqrt(2))/(right/sqrt(2)))
new_m <- c(-1/m[1], 1/m[2])
horiz <- (y_mean[2] - y_mean[1] + new_m[1]*x_mean[1] - new_m[2]*x_mean[2])/(new_m[1] - new_m[2])
vert <- new_m[1]*(horiz-x_mean[1]) + y_mean[1]
r_sq <- (horiz^2 + (center-vert)^2)
lines((-left/sqrt(2)):(right/sqrt(2)), sqrt(r_sq - ((-left/sqrt(2)):(right/sqrt(2)) - horiz)^2) + vert)
points(spray_subset$dist*cos((90-spray_subset$spray_angle)*pi/180), spray_subset$dist*sin((90-spray_subset$spray_angle)*pi/180))
lines((-(121 + sqrt(121^2 - 4 * 2 * (60.5^2-95^2)))/4):((121 + sqrt(121^2 - 4 * 2 * (60.5^2-95^2)))/4),
sqrt(95^2 - ((-(121 + sqrt(121^2 - 4 * 2 * (60.5^2 - 95^2)))/4):((121 + sqrt(121^2 - 4 * 2 * (60.5^2-95^2)))/4))^2) + 60.5)
}
spray_chart_hitter("tj42oakld", oakland_fsu)
plot (-250:250, 0:500, type="n", bg="white", axes = FALSE)
lines(c(0,90/sqrt(2),0,-90/sqrt(2),0),c(0,90/sqrt(2),180/sqrt(2),90/sqrt(2),0), col=c("black"))
lines(c(0,300/sqrt(2)), c(0,300/sqrt(2)), col = c("black"))
lines(c(0,-300/sqrt(2)), c(0,300/sqrt(2)), col = c("black"))
hits <- subset(oakland_fsu, !is.na(spray_angle))
points(hits$dist..ft.*cos((90-hits$spray_angle)*pi/180), hits$dist..ft.*sin((90-hits$spray_angle)*pi/180))
lines((-300/sqrt(2)):(300/sqrt(2)), sqrt((400-value)^2-((-300/sqrt(2)):(300/sqrt(2)))^2) + value)
points(hits$dist..ft.*cos((90-hits$spray_angle)*pi/180), hits$dist..ft.*sin((90-hits$spray_angle)*pi/180))
points(160*cos((90-42)*pi/180), 160*sin((90-42)*pi/180))
library(plyr)
bips_17 <- read.csv("~/Documents/Wash U Sports Analytics/SABR18/Batted_Balls_17.csv", stringsAsFactors = FALSE)
launch_angles <- bips_17[, c("player_name", "launch_angle")]
avg_launch_angles <- aggregate(launch_angles$launch_angle, by = list(launch_angles$player_name), FUN = mean)
bips_count <- count(launch_angles, "player_name")
colnames(bips_count) <- c("player_name", "bips")
avg_launch_angles <- merge(bips_count, avg_launch_angles,
by.x = "player_name", by.y = "Group.1")
colnames(avg_launch_angles) <- c("player_name", "bips", "avg_launch")
bips_17$hit <- ifelse(bips_17$events == "single" | bips_17$events == "double" | bips_17$events == "triple" | bips_17$events == "home_run",
1,0)
rm(list = ls())
library(devtools)
library(roxygen2)
library(testthat)
library(MASS)
library(ANTsR)
setwd("~/Documents/Applied_Statistical_Programming/ASP_group_project") # Tyler
current.code <- as.package("gaussianComparisons")
load_all(current.code)
data_montgomery <- read.csv("gaussianComparisons/Data/exampleHITs.csv")
install.packages("ANTsR")
sSet <- list()
sSet <- append(sSet, list(1:3))
sSet
sSet <- append(list(2,2,2))
sSet <- append(sSet, list(2,2,2))
sSet
sSet <- append(sSet, list(2:4))
sSet
sSet <- list()
sSet[1] <- c(1,2,3)
sSet[2] <- c(2,2,2)
sSet[3] <- c(3,2,3)
sSet[4] <- c(1,2,4)
sSet[5] <- c(1,2,6)
sSet[6] <- c(1,2,5)
sSet
sSet <- list()
sSet[[1]] <- c(1,2,3)
sSet[[2]] <- c(2,2,2)
sSet[[3]] <- c(3,2,3)
sSet[[4]] <- c(1,2,4)
sSet[[5]] <- c(1,2,6)
sSet[[6]] <- c(1,2,5)
sSet
sSet <- sSet[order(sapply(sSet, function(x) x[3]), decreasing = TRUE)]
sSet
sSet[1]
sSet[2]
sSet[1:2]
current.code <- as.package("gaussianComparisons")
load_all(current.code)
document(current.code)
maxInfoComp(data_montgomery, 2, .01, 1)
current.code <- as.package("gaussianComparisons")
load_all(current.code)
current.code <- as.package("gaussianComparisons")
load_all(current.code)
current.code <- as.package("gaussianComparisons")
load_all(current.code)
current.code <- as.package("gaussianComparisons")
load_all(current.code)
maxInfoComp(data_montgomery, 2, .01, 2)
library(microbenchmark)
omega1 <- omega(data_montgomery, 2)
cleaned_data <- cleaner(data_montgomery)
microbenchmark(finalS(5059, 5091, omega1, cleaned_data, 2, 0.01), 10)
warnings()
finalS(5059, 5091, omega1, cleaned_data, 2, 0.01)
microbenchmark(finalS(5059, 5091, omega1, cleaned_data, 2, 0.01), 10)
microbenchmark(finalS(5059, 5091, omega1, cleaned_data, 2, 0.01), 5)
warnings()
microbenchmark(finalS(5059, 5091, omega1, cleaned_data, 2, 0.01), times = 50)
ncol(combn(unique(data_montgomery$document_id), 2))
library(shiny)
install.packages("EBMAforecast")
library(EBMAforecast)
ui <- fluidPage(
# App title ----
titlePanel("Presidential Forecasts"),
# Sidebar layout with a input and output definitions ----
sidebarLayout(
# Sidebar panel for inputs ----
sidebarPanel(
# Include Clarifying Text
helpText("Here are the results of presidential forecasts from 1952-2008"),
# Input: Selector for Forecast model to plot with Actual results ----
selectInput("variable", "Forecast model:",
c("Campbell",
"Lewis-Beck",
"EWT2C2",
"Fair",
"Hibbs",
"Abramowitz"))
),
# Main panel for displaying outputs ----
mainPanel(
# Output: HTML table with requested number of observations ----
tableOutput("view"),
# Output: Plot the election results
plotOutput("plot", click = "plot_click"),
verbatimTextOutput("info")
)
)
)
server <- function(input, output) {
library(EBMAforecast)
data("presidentialForecast")
# Show the first "n" observations ----
output$view <- renderTable({
presidentialForecast
})
# Plot the actual results
output$plot <- renderPlot({
plot(as.numeric(row.names(presidentialForecast)), presidentialForecast$Actual,
xlab = "Year", ylab = "Voting Percentage", col = "blue", main = "Voting Percentage by Year")
if (input$variable == "Campbell"){
points(as.numeric(row.names(presidentialForecast)), presidentialForecast$Campbell, col = "red")
} else if (input$variable == "Lewis-Beck"){
points(as.numeric(row.names(presidentialForecast)), presidentialForecast$`Lewis-Beck`, col = "red")
} else if (input$variable == "EWT2C2"){
points(as.numeric(row.names(presidentialForecast)), presidentialForecast$EWT2C2, col = "red")
} else if (input$variable == "Fair"){
points(as.numeric(row.names(presidentialForecast)), presidentialForecast$Fair, col = "red")
} else if (input$variable == "Hibbs"){
points(as.numeric(row.names(presidentialForecast)), presidentialForecast$Hibbs, col = "red")
} else {
points(as.numeric(row.names(presidentialForecast)), presidentialForecast$Abramowitz, col = "red")
}
legend("topright", legend = c("Actual", input$variable),
col = c("blue", "red"), pch = c(1,1))
})
# Output click info
output$info <- renderText({
paste0("Year =", input$plot_click$x, "\nVoting Percentage =", input$plot_click$y)
})
}
shinyApp(ui = ui, server = server)
library(devtools)
library(roxygen2)
library(testthat)
library(MASS)
library(ANTsR)
setwd("~/Documents/Applied_Statistical_Programming/ASP_group_project") # Tyler
current.code <- as.package("gaussianComparisons")
load_all(current.code)
data_montgomery <- read.csv("gaussianComparisons/Data/exampleHITs.csv")
data_clean <- cleaner(data_montgomery)
omega_data <- omega(data_montgomery,2)
muMaker(5059, 5091, omega_data, data_clean, 2, 0.1)
current.code <- as.package("gaussianComparisons")
load_all(current.code)
document(current.code)
library(microbenchmark)
microbenchmark(finalS(5059, 5091, omega_data, data_clean, 2, 0.01), times = 50)
warnings()
current.code <- as.package("gaussianComparisons")
load_all(current.code)
document(current.code)
microbenchmark(finalS(5059, 5091, omega_data, data_clean, 2, 0.01), times = 50)
pnorm(0)
current.code <- as.package("gaussianComparisons")
load_all(current.code)
document(current.code)
microbenchmark(finalS(5059, 5091, omega_data, data_clean, 2, 0.01), times = 50)
finalS(5059, 5091, omega_data, data_clean, 2, 0.01)
library(tidyr)
install.packages("tidyr")
install.packages("tidyr")
library(tidyr)
library(table4)
install.packages("table4")
library(table4)
data(table1); data(table2); data(table3); data(table4a); data(table4b)
table4a
table4a %>%
gather('1999', '2000', key="year", value="cases")
library(dplyr)
tidy4a <- table4a %>%
gather(`1999`, `2000`, key = "year", value = "cases")
