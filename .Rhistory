# dLogPri Function (Equation 4)
omega_test <- omega(gdata, 2)
g_test <- sample(1:10, 11, replace = T)
dLogPri(omega_test, g_test)
diag(omega_test) <- diag(omega_test) + .01
(-solve(omega_test)) %*% g_test
## Load libraries
library(devtools)
library(roxygen2)
library(testthat)
## Set working directory
setwd("~/Documents/GitHub/ASP_group_project")
## Updates the package based on R scripts written, man and NAMESPACE automatically updates.
# Manually update DESCRIPTION if need be.
current.code <- as.package("gaussianComparisons")
load_all(current.code)
document(current.code)
check(current.code)
# omega Function (Equation 1.5)
gdata <- data.frame(c(1,1,1,2,2,2,3,3,4,4,4), c(2,3,4,1,3,4,1,4,1,2,3),
c(1,1,1,-1,-1,-1,-1,1,-1,1,-1))
colnames(gdata) <- c("first", "second", "y")
<<<<<<< HEAD
View(gdata)
omega <-function(dataset,sigma){
omega_matrix <- matrix(data = 0, nrow=(nrow(dataset)),ncol=(nrow(dataset)))
for(i in 1:(nrow(dataset))){
for (j in 1:(nrow(dataset))){
if(dataset$first[i] == dataset$first[j]){
omega_matrix[i,j] <- omega_matrix[i,j] + sigma^2
}
if(dataset$first[i] == dataset$second[j]){
omega_matrix[i,j] <- omega_matrix[i,j] - sigma^2
}
if(dataset$second[i] == dataset$first[j]){
omega_matrix[i,j] <- omega_matrix[i,j] - sigma^2
}
if(dataset$second[i] == dataset$second[j]){
omega_matrix[i,j] <- omega_matrix[i,j] + sigma^2
}
}
}
return (omega_matrix)
}
omega(gdata, 2)
rm(list=ls())
?cdf
apropos("cf")
apropos("cdf")
?edcf
?ecdf
ecdf(1:10)
ecdf(c(1,3,6,3,5,1,3,2))
plot.ecdf(1:10)
plot.ecdf(c(1,1,1,1,1,1,2,3,4,2,2,1,2,4,5,2,4,2,1,2,4,1,1,1,1))
ecdf(1:10)[1]
x<-ecdf(1:10)
x
?log
exp(1)
logLikelihood<-function(g){
sum<-0
for(i in 1:length(g)){
sum<-sum+log(ecdf(g))
}
return(sum)
}
logLikelihood(1:10)
ecdf(1:10)
?ecdf
print.ecdf(1:10)
ecdf.print(1:10)
summary(ecdf(1:10))
print(ecdf(1:10))
ecdf(1:10)
ecdf(1:10)
log(ecdf(1))
x
dnorm(1:10)
pnorm(1:10)
pnorm(c(1,1,1,1,3,5,2,2,1,8))
qnorm(1:10)
rnorm(1:10)
dnorm(1:10)
plot(dnorm(1:10))
plot(pnorm(1:10))
logLikelihood<-function(g){
sum<-0
for(i in 1:length(g)){
sum<-sum+log(pnorm(g))
}
return(sum)
}
logLikelihood(1:10)
logLikelihood<-function(g){
sum<-0
for(i in 1:length(g)){
sum=sum+log(pnorm(g))
}
return(sum)
}
logLikelihood(1:10)
logLikelihood(c(1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4))
gdata <- data.frame(c(1,1,1,2,2,2,3,3,4,4,4), c(2,3,4,1,3,4,1,4,1,2,3),
c(1,1,1,-1,-1,-1,-1,1,-1,1,-1))
colnames(gdata) <- c("first", "second", "y")
View(gdata)
omega <-function(dataset,sigma){
omega_matrix <- matrix(data = 0, nrow=(nrow(dataset)),ncol=(nrow(dataset)))
for(i in 1:(nrow(dataset))){
for (j in 1:(nrow(dataset))){
if(dataset$first[i] == dataset$first[j]){
omega_matrix[i,j] <- omega_matrix[i,j] + sigma^2
}
if(dataset$first[i] == dataset$second[j]){
omega_matrix[i,j] <- omega_matrix[i,j] - sigma^2
}
if(dataset$second[i] == dataset$first[j]){
omega_matrix[i,j] <- omega_matrix[i,j] - sigma^2
}
if(dataset$second[i] == dataset$second[j]){
omega_matrix[i,j] <- omega_matrix[i,j] + sigma^2
}
}
}
return (omega_matrix)
}
omega(gdata, 2)
logLikelihood(c(2,3,4,5,6),c(1,1,-1,1,-1))
logLikelihood(c(2,3,4,5,6),c(1,1,-1,1,-1))
logLikelihood<-function(g, y){
sum<-0
for(i in 1:length(g)){
sum=sum+log(pnorm(g*y))
}
return(sum)
}
logLikelihood(c(2,3,4,5,6),c(1,1,-1,1,-1))
?diag
diag(x=1,2,2)
x<-diag(1,2,2)
x[1,1]
x[2,1]
x[1,2]
x[2,2]
x<-diag(235,90,90)
x[57,57]
View(x)
rm(list=ls())
=======
#View(gdata)
omega(gdata, 2)
# dLogPri Function (Equation 4)
omega_test <- omega(gdata, 2)
g_test <- sample(1:10, 11, replace = T)
dLogPri(omega_test, g_test)
diag(omega_test) <- diag(omega_test) + .01
(-solve(omega_test)) %*% g_test
# d2LogPri Function (Equation 5)
d2LogPri(omega_test, g_test)
## Load libraries
library(devtools)
library(roxygen2)
library(testthat)
## Set working directory
setwd("~/Documents/GitHub/ASP_group_project")
## Updates the package based on R scripts written, man and NAMESPACE automatically updates.
# Manually update DESCRIPTION if need be.
current.code <- as.package("gaussianComparisons")
load_all(current.code)
document(current.code)
check(current.code)
# omega Function (Equation 1.5)
gdata <- data.frame(c(1,1,1,2,2,2,3,3,4,4,4), c(2,3,4,1,3,4,1,4,1,2,3),
c(1,1,1,-1,-1,-1,-1,1,-1,1,-1))
colnames(gdata) <- c("first", "second", "y")
#View(gdata)
omega(gdata, 2)
# dLogPri Function (Equation 4)
omega_test <- omega(gdata, 2)
g_test <- sample(1:10, 11, replace = T)
dLogPri(omega_test, g_test)
diag(omega_test) <- diag(omega_test) + .01
(-solve(omega_test)) %*% g_test
# d2LogPri Function (Equation 5)
d2LogPri(omega_test, g_test)
# logLike Function (Equation 5.9)
g1<-c(2,3,4,5,6)
y1<-c(1,1,-1,1,-1)
logLike(g1,y1)
## Load libraries
library(devtools)
library(roxygen2)
library(testthat)
## Set working directory
setwd("~/Documents/GitHub/ASP_group_project")
## Updates the package based on R scripts written, man and NAMESPACE automatically updates.
# Manually update DESCRIPTION if need be.
current.code <- as.package("gaussianComparisons")
load_all(current.code)
document(current.code)
check(current.code)
# omega Function (Equation 1.5)
gdata <- data.frame(c(1,1,1,2,2,2,3,3,4,4,4), c(2,3,4,1,3,4,1,4,1,2,3),
c(1,1,1,-1,-1,-1,-1,1,-1,1,-1))
colnames(gdata) <- c("first", "second", "y")
#View(gdata)
omega(gdata, 2)
# dLogPri Function (Equation 4)
omega_test <- omega(gdata, 2)
g_test <- sample(1:10, 11, replace = T)
dLogPri(omega_test, g_test)
diag(omega_test) <- diag(omega_test) + .01
(-solve(omega_test)) %*% g_test
# d2LogPri Function (Equation 5)
d2LogPri(omega_test, g_test)
# logLike Function (Equation 5.9)
g1<-c(2,3,4,5,6)
y1<-c(1,1,-1,1,-1)
logLike(g1,y1)
## Load libraries
library(devtools)
library(roxygen2)
library(testthat)
## Set working directory
setwd("~/Documents/GitHub/ASP_group_project")
## Updates the package based on R scripts written, man and NAMESPACE automatically updates.
# Manually update DESCRIPTION if need be.
current.code <- as.package("gaussianComparisons")
load_all(current.code)
document(current.code)
check(current.code)
# omega Function (Equation 1.5)
gdata <- data.frame(c(1,1,1,2,2,2,3,3,4,4,4), c(2,3,4,1,3,4,1,4,1,2,3),
c(1,1,1,-1,-1,-1,-1,1,-1,1,-1))
colnames(gdata) <- c("first", "second", "y")
#View(gdata)
omega(gdata, 2)
# dLogPri Function (Equation 4)
omega_test <- omega(gdata, 2)
g_test <- sample(1:10, 11, replace = T)
dLogPri(omega_test, g_test)
diag(omega_test) <- diag(omega_test) + .01
(-solve(omega_test)) %*% g_test
# d2LogPri Function (Equation 5)
d2LogPri(omega_test, g_test)
# logLike Function (Equation 5.9)
g1<-c(2,3,4,5,6)
y1<-c(1,1,-1,1,-1)
logLike(g1,y1)
# dLogLike Function (Equation 6)
dLogLike(g1,y1)
## Load libraries
library(devtools)
library(roxygen2)
library(testthat)
## Set working directory
setwd("~/Documents/GitHub/ASP_group_project")
## Updates the package based on R scripts written, man and NAMESPACE automatically updates.
# Manually update DESCRIPTION if need be.
current.code <- as.package("gaussianComparisons")
load_all(current.code)
document(current.code)
check(current.code)
# omega Function (Equation 1.5)
gdata <- data.frame(c(1,1,1,2,2,2,3,3,4,4,4), c(2,3,4,1,3,4,1,4,1,2,3),
c(1,1,1,-1,-1,-1,-1,1,-1,1,-1))
colnames(gdata) <- c("first", "second", "y")
#View(gdata)
omega(gdata, 2)
# dLogPri Function (Equation 4)
omega_test <- omega(gdata, 2)
g_test <- sample(1:10, 11, replace = T)
dLogPri(omega_test, g_test)
diag(omega_test) <- diag(omega_test) + .01
(-solve(omega_test)) %*% g_test
# d2LogPri Function (Equation 5)
d2LogPri(omega_test, g_test)
# logLike Function (Equation 5.9)
g1<-c(2,3,4,5,6)
y1<-c(1,1,-1,1,-1)
logLike(g1,y1)
# dLogLike Function (Equation 6)
dLogLike(g1,y1)
# d2LogLike Function (Equation 7)
d2LogLike(g1,y1)
## Load libraries
library(devtools)
library(roxygen2)
library(testthat)
## Set working directory
setwd("~/Documents/GitHub/ASP_group_project")
## Updates the package based on R scripts written, man and NAMESPACE automatically updates.
# Manually update DESCRIPTION if need be.
current.code <- as.package("gaussianComparisons")
load_all(current.code)
document(current.code)
check(current.code)
# omega Function (Equation 1.5)
gdata <- data.frame(c(1,1,1,2,2,2,3,3,4,4,4), c(2,3,4,1,3,4,1,4,1,2,3),
c(1,1,1,-1,-1,-1,-1,1,-1,1,-1))
colnames(gdata) <- c("first", "second", "y")
#View(gdata)
omega(gdata, 2)
# dLogPri Function (Equation 4)
omega_test <- omega(gdata, 2)
g_test <- sample(1:10, 11, replace = T)
dLogPri(omega_test, g_test)
diag(omega_test) <- diag(omega_test) + .01
(-solve(omega_test)) %*% g_test
# d2LogPri Function (Equation 5)
d2LogPri(omega_test, g_test)
# logLike Function (Equation 5.9)
g1<-c(2,3,4,5,6)
y1<-c(1,1,-1,1,-1)
logLike(g1,y1)
# dLogLike Function (Equation 6)
dLogLike(g1,y1)
# d2LogLike Function (Equation 7)
d2LogLike(g1,y1)
# dPsi Function (Equation 8)
y_test <- gdata$y
dLogPri(omega_test, g_test)
dLogLike(g_test, y_test)
dLogPri(omega_test, g_test) + dLogLike(g_test, y_test)
dPsi(omega_test, g_test, y_test) == dLogPri(omega_test, g_test) + dLogLike(g_test, y_test)
## Load libraries
library(devtools)
library(roxygen2)
library(testthat)
## Set working directory
setwd("~/Documents/GitHub/ASP_group_project")
## Updates the package based on R scripts written, man and NAMESPACE automatically updates.
# Manually update DESCRIPTION if need be.
current.code <- as.package("gaussianComparisons")
load_all(current.code)
document(current.code)
check(current.code)
# omega Function (Equation 1.5)
gdata <- data.frame(c(1,1,1,2,2,2,3,3,4,4,4), c(2,3,4,1,3,4,1,4,1,2,3),
c(1,1,1,-1,-1,-1,-1,1,-1,1,-1))
colnames(gdata) <- c("first", "second", "y")
#View(gdata)
omega(gdata, 2)
# dLogPri Function (Equation 4)
omega_test <- omega(gdata, 2)
g_test <- sample(1:10, 11, replace = T)
dLogPri(omega_test, g_test)
diag(omega_test) <- diag(omega_test) + .01
(-solve(omega_test)) %*% g_test
# d2LogPri Function (Equation 5)
d2LogPri(omega_test, g_test)
# logLike Function (Equation 5.9)
g1<-c(2,3,4,5,6)
y1<-c(1,1,-1,1,-1)
logLike(g1,y1)
# dLogLike Function (Equation 6)
dLogLike(g1,y1)
# d2LogLike Function (Equation 7)
d2LogLike(g1,y1)
# dPsi Function (Equation 8)
y_test <- gdata$y
dLogPri(omega_test, g_test)
dLogLike(g_test, y_test)
dLogPri(omega_test, g_test) + dLogLike(g_test, y_test)
dPsi(omega_test, g_test, y_test) == dLogPri(omega_test, g_test) + dLogLike(g_test, y_test)
# d2Psi Function (Equation 9)
d2Psi(omega_test, g_test, y_test)
## Load libraries
library(devtools)
library(roxygen2)
library(testthat)
## Set working directory
setwd("~/Documents/GitHub/ASP_group_project")
## Updates the package based on R scripts written, man and NAMESPACE automatically updates.
# Manually update DESCRIPTION if need be.
current.code <- as.package("gaussianComparisons")
load_all(current.code)
document(current.code)
check(current.code)
# omega Function (Equation 1.5)
gdata <- data.frame(c(1,1,1,2,2,2,3,3,4,4,4), c(2,3,4,1,3,4,1,4,1,2,3),
c(1,1,1,-1,-1,-1,-1,1,-1,1,-1))
colnames(gdata) <- c("first", "second", "y")
#View(gdata)
omega(gdata, 2)
# dLogPri Function (Equation 4)
omega_test <- omega(gdata, 2)
g_test <- sample(1:10, 11, replace = T)
dLogPri(omega_test, g_test)
diag(omega_test) <- diag(omega_test) + .01
(-solve(omega_test)) %*% g_test
# d2LogPri Function (Equation 5)
d2LogPri(omega_test, g_test)
# logLike Function (Equation 5.9)
g1<-c(2,3,4,5,6)
y1<-c(1,1,-1,1,-1)
logLike(g1,y1)
# dLogLike Function (Equation 6)
dLogLike(g1,y1)
# d2LogLike Function (Equation 7)
d2LogLike(g1,y1)
# dPsi Function (Equation 8)
y_test <- gdata$y
dLogPri(omega_test, g_test)
dLogLike(g_test, y_test)
dLogPri(omega_test, g_test) + dLogLike(g_test, y_test)
dPsi(omega_test, g_test, y_test) == dLogPri(omega_test, g_test) + dLogLike(g_test, y_test)
# d2Psi Function (Equation 9)
d2Psi(omega_test, g_test, y_test)
## Updates the package based on R scripts written, man and NAMESPACE automatically updates.
# Manually update DESCRIPTION if need be.
current.code <- as.package("gaussianComparisons")
load_all(current.code)
document(current.code)
check(current.code)
# omega Function (Equation 1.5)
gdata <- data.frame(c(1,1,1,2,2,2,3,3,4,4,4), c(2,3,4,1,3,4,1,4,1,2,3),
c(1,1,1,-1,-1,-1,-1,1,-1,1,-1))
colnames(gdata) <- c("first", "second", "y")
#View(gdata)
omega(gdata, 2)
# dLogPri Function (Equation 4)
omega_test <- omega(gdata, 2)
g_test <- sample(1:10, 11, replace = T)
dLogPri(omega_test, g_test)
diag(omega_test) <- diag(omega_test) + .01
(-solve(omega_test)) %*% g_test
# d2LogPri Function (Equation 5)
d2LogPri(omega_test, g_test)
# logLike Function (Equation 5.9)
g1<-c(2,3,4,5,6)
y1<-c(1,1,-1,1,-1)
logLike(g1,y1)
# dLogLike Function (Equation 6)
dLogLike(g1,y1)
# d2LogLike Function (Equation 7)
d2LogLike(g1,y1)
# dPsi Function (Equation 8)
y_test <- gdata$y
dLogPri(omega_test, g_test)
dLogLike(g_test, y_test)
dLogPri(omega_test, g_test) + dLogLike(g_test, y_test)
dPsi(omega_test, g_test, y_test) == dLogPri(omega_test, g_test) + dLogLike(g_test, y_test)
# d2Psi Function (Equation 9)
d2Psi(omega_test, g_test, y_test)
## Load libraries
library(devtools)
library(roxygen2)
library(testthat)
## Set working directory
setwd("~/Documents/GitHub/ASP_group_project")
## Updates the package based on R scripts written, man and NAMESPACE automatically updates.
# Manually update DESCRIPTION if need be.
current.code <- as.package("gaussianComparisons")
load_all(current.code)
document(current.code)
check(current.code)
# omega Function (Equation 1.5)
gdata <- data.frame(c(1,1,1,2,2,2,3,3,4,4,4), c(2,3,4,1,3,4,1,4,1,2,3),
c(1,1,1,-1,-1,-1,-1,1,-1,1,-1))
colnames(gdata) <- c("first", "second", "y")
#View(gdata)
omega(gdata, 2)
# dLogPri Function (Equation 4)
omega_test <- omega(gdata, 2)
g_test <- sample(1:10, 11, replace = T)
dLogPri(omega_test, g_test)
diag(omega_test) <- diag(omega_test) + .01
(-solve(omega_test)) %*% g_test
# d2LogPri Function (Equation 5)
d2LogPri(omega_test, g_test)
# logLike Function (Equation 5.9)
g1<-c(2,3,4,5,6)
y1<-c(1,1,-1,1,-1)
logLike(g1,y1)
# dLogLike Function (Equation 6)
dLogLike(g1,y1)
# d2LogLike Function (Equation 7)
d2LogLike(g1,y1)
# dPsi Function (Equation 8)
y_test <- gdata$y
dLogPri(omega_test, g_test)
dLogLike(g_test, y_test)
dLogPri(omega_test, g_test) + dLogLike(g_test, y_test)
dPsi(omega_test, g_test, y_test) == dLogPri(omega_test, g_test) + dLogLike(g_test, y_test)
# d2Psi Function (Equation 9)
d2Psi(omega_test, g_test, y_test)
# newtonMethodPrequel Function (pre Equation 9.5)
newtonMethodPrequel(omega_test, g_test, y_test)
## Load libraries
library(devtools)
library(roxygen2)
library(testthat)
## Set working directory
setwd("~/Documents/GitHub/ASP_group_project")
## Updates the package based on R scripts written, man and NAMESPACE automatically updates.
# Manually update DESCRIPTION if need be.
current.code <- as.package("gaussianComparisons")
load_all(current.code)
document(current.code)
check(current.code)
# omega Function (Equation 1.5)
gdata <- data.frame(c(1,1,1,2,2,2,3,3,4,4,4), c(2,3,4,1,3,4,1,4,1,2,3),
c(1,1,1,-1,-1,-1,-1,1,-1,1,-1))
colnames(gdata) <- c("first", "second", "y")
#View(gdata)
omega(gdata, 2)
# dLogPri Function (Equation 4)
omega_test <- omega(gdata, 2)
g_test <- sample(1:10, 11, replace = T)
dLogPri(omega_test, g_test)
diag(omega_test) <- diag(omega_test) + .01
(-solve(omega_test)) %*% g_test
# d2LogPri Function (Equation 5)
d2LogPri(omega_test, g_test)
# logLike Function (Equation 5.9)
g1<-c(2,3,4,5,6)
y1<-c(1,1,-1,1,-1)
logLike(g1,y1)
# dLogLike Function (Equation 6)
dLogLike(g1,y1)
# d2LogLike Function (Equation 7)
d2LogLike(g1,y1)
# dPsi Function (Equation 8)
y_test <- gdata$y
dLogPri(omega_test, g_test)
dLogLike(g_test, y_test)
dLogPri(omega_test, g_test) + dLogLike(g_test, y_test)
dPsi(omega_test, g_test, y_test) == dLogPri(omega_test, g_test) + dLogLike(g_test, y_test)
# d2Psi Function (Equation 9)
d2Psi(omega_test, g_test, y_test)
# newtonMethodPrequel Function (pre Equation 9.5)
newtonMethodPrequel(omega_test, g_test, y_test)
# newtonMethod Function (Equation 9.5)
newton_method(omega_test, g_test, y_test, .01)
# newtonMethod Function (Equation 9.5)
newtonMethod(omega_test, g_test, y_test, .01)
## Load libraries
library(devtools)
library(roxygen2)
library(testthat)
## Set working directory
setwd("~/Documents/GitHub/ASP_group_project")
## Updates the package based on R scripts written, man and NAMESPACE automatically updates.
# Manually update DESCRIPTION if need be.
current.code <- as.package("gaussianComparisons")
load_all(current.code)
## Load libraries
library(devtools)
library(roxygen2)
library(testthat)
## Set working directory
setwd("~/Documents/GitHub/ASP_group_project")
## Updates the package based on R scripts written, man and NAMESPACE automatically updates.
# Manually update DESCRIPTION if need be.
current.code <- as.package("gaussianComparisons")
load_all(current.code)
document(current.code)
check(current.code)
# omega Function (Equation 1.5)
gdata <- data.frame(c(1,1,1,2,2,2,3,3,4,4,4), c(2,3,4,1,3,4,1,4,1,2,3),
c(1,1,1,-1,-1,-1,-1,1,-1,1,-1))
colnames(gdata) <- c("first", "second", "y")
#View(gdata)
omega(gdata, 2)
# dLogPri Function (Equation 4)
omega_test <- omega(gdata, 2)
g_test <- sample(1:10, 11, replace = T)
dLogPri(omega_test, g_test)
diag(omega_test) <- diag(omega_test) + .01
(-solve(omega_test)) %*% g_test
# d2LogPri Function (Equation 5)
d2LogPri(omega_test, g_test)
# logLike Function (Equation 5.9)
g1<-c(2,3,4,5,6)
y1<-c(1,1,-1,1,-1)
logLike(g1,y1)
# dLogLike Function (Equation 6)
dLogLike(g1,y1)
# d2LogLike Function (Equation 7)
d2LogLike(g1,y1)
# dPsi Function (Equation 8)
y_test <- gdata$y
dLogPri(omega_test, g_test)
dLogLike(g_test, y_test)
dLogPri(omega_test, g_test) + dLogLike(g_test, y_test)
dPsi(omega_test, g_test, y_test) == dLogPri(omega_test, g_test) + dLogLike(g_test, y_test)
# d2Psi Function (Equation 9)
d2Psi(omega_test, g_test, y_test)
# newtonMethodPrequel Function (pre Equation 9.5)
newtonMethodPrequel(omega_test, g_test, y_test)
# newtonMethod Function (Equation 9.5)
newtonMethod(omega_test, g_test, y_test, .01)
## Load libraries
library(devtools)
library(roxygen2)
library(testthat)
## Set working directory
setwd("~/Documents/GitHub/ASP_group_project")
## Updates the package based on R scripts written, man and NAMESPACE automatically updates.
# Manually update DESCRIPTION if need be.
current.code <- as.package("gaussianComparisons")
load_all(current.code)
document(current.code)
check(current.code)
# omega Function (Equation 1.5)
gdata <- data.frame(c(1,1,1,2,2,2,3,3,4,4,4), c(2,3,4,1,3,4,1,4,1,2,3),
c(1,1,1,-1,-1,-1,-1,1,-1,1,-1))
colnames(gdata) <- c("first", "second", "y")
#View(gdata)
omega(gdata, 2)
# dLogPri Function (Equation 4)
omega_test <- omega(gdata, 2)
g_test <- sample(1:10, 11, replace = T)
dLogPri(omega_test, g_test)
diag(omega_test) <- diag(omega_test) + .01
(-solve(omega_test)) %*% g_test
# d2LogPri Function (Equation 5)
d2LogPri(omega_test, g_test)
# logLike Function (Equation 5.9)
g1<-c(2,3,4,5,6)
y1<-c(1,1,-1,1,-1)
logLike(g1,y1)
# dLogLike Function (Equation 6)
dLogLike(g1,y1)
# d2LogLike Function (Equation 7)
d2LogLike(g1,y1)
# dPsi Function (Equation 8)
y_test <- gdata$y
dLogPri(omega_test, g_test)
dLogLike(g_test, y_test)
dLogPri(omega_test, g_test) + dLogLike(g_test, y_test)
dPsi(omega_test, g_test, y_test) == dLogPri(omega_test, g_test) + dLogLike(g_test, y_test)
# d2Psi Function (Equation 9)
d2Psi(omega_test, g_test, y_test)
# newtonMethodPrequel Function (pre Equation 9.5)
newtonMethodPrequel(omega_test, g_test, y_test)
# newtonMethod Function (Equation 9.5)
newtonMethod(omega_test, g_test, y_test, .01)
>>>>>>> 68c377c29d553b35cb037c85cc002481ebd4e66e
